# |  (C) 2008-2024 Potsdam Institute for Climate Impact Research (PIK)
# |  authors, and contributors see CITATION.cff file. This file is part
# |  of MAgPIE and licensed under AGPL-3.0-or-later. Under Section 7 of
# |  AGPL-3.0, you are granted additional permissions described in the
# |  MAgPIE License Exception, version 1.0 (see LICENSE file).
# |  Contact: magpie@pik-potsdam.de

##################
#### SETTINGS ####
##################

cfg <- list()

#### Main settings ####

# short description of the actual run
cfg$title <- "default"

# path to the submodel to be used relative to main model folder
cfg$model <- "main.gms"   #def = "main.gms"

#### input settings ####

# which input data sets should be used?
cfg$input <- c(regional    = "rev4.104_h12_magpie.tgz",
               cellular    = "rev4.104_h12_fd712c0b_cellularmagpie_c200_MRI-ESM2-0-ssp370_lpjml-8e6c5eb1.tgz",
               validation  = "rev4.104_h12_validation.tgz",
               additional  = "additional_data_rev4.48.tgz",
               calibration = "calibration_H12_26Mar24.tgz")

# NOTE: It is recommended to recalibrate the model when changing cellular input data
#       as well as for any other setting that would affect initial values in the model,
#       e.g. changes in costs structure, NPI policies, etc.

#a list of repositories (please pay attention to the list format!) in which the
#files should be searched for. Files will be searched in all repositories until
#found, always starting with the first repository in the list. The argument must
#have the format of a named list with the url of the repository as name and a
#corresponding list of options such as username or password to access the
#repository as value. If no options are required the value has to be NULL. (e.g.
#list("ftp://my_pw_protected_server.de/data"=list(user="me",password=12345),
#     "http://free_server.de/dat"=NULL))
#Please add system or user specific repositories (such as repos with limited
#access for) through the R option "magpie_repos". Through the append command
#below it will get merged into cfg$repositories

cfg$repositories <- append(list("https://rse.pik-potsdam.de/data/magpie/public"=NULL),
                           getOption("magpie_repos"))



# Should input data be downloaded from source even if cfg$input did not change?
cfg$force_download <- FALSE

# Should an existing output folder be replaced if a new run with the same name is started?
cfg$force_replace <- FALSE

# Settings for the yield calibration
# For this yield calibration (that uses results from a special MAgPIE calibration run
# triggered by the recalibrate switch) to be activated the switch s14_use_yield_calib needs
# to be turned on. (Default is off)
# This switch should only be activated for penalty_apr22 crop realization.
# For other realizations, it is recommended not to use this yield calibration.
#
# Switch to turn on/off recalibration of yields.
# * (TRUE): Yield calibration will be performed
# * (ifneeded): Yield calibration will only be executed if input data is
# *             downloaded from repository
# * (FALSE): Yield calibration will not be performed
cfg$recalibrate <- FALSE     # def = FALSE
# Up to which accuracy shall be recalibrated?
cfg$calib_accuracy <- 0.05         # def = 0.05
# What is the maximum number of iterations if the precision goal is not reached?
cfg$calib_maxiter <- 20           # def = 20
# Factor determining how much the divergence infuences the new
# calibration factor in each calibration iteration (0-1)
cfg$damping_factor <- 0.96        # def= 0.96
# switch on/of calibration of cropland (pasture will be left untouched)
cfg$calib_cropland <- TRUE         # def= TRUE
# set upper limit for cropland calibration factor
cfg$crop_calib_max <- 1.5            # def= 1.5
# Selection type of calibration factors.
# If FALSE, calibration factors from the last iteration are used.
# If TRUE, calibration factors from the iteration with the lowest divergence are used.
cfg$best_calib <- TRUE   # def = TRUE

# Settings for land conversion cost calibration (cropland)
# The calibration routine derives a time-series of regional calibration factors for
# costs of cropland expansion and rewards for cropland reduction,
# with the goal to match historical regional cropland in the period 1995-2015.
# * (TRUE): Land conversion cost calibration will be performed
# * (ifneeded): Land conversion cost calibration will only be executed if the input file "f39_calib.csv" is missing
# * (FALSE): Land conversion cost calibration will not be performed
cfg$recalibrate_landconversion_cost <- "ifneeded" #def "ifneeded"
# Up to which accuracy shall be recalibrated?
cfg$calib_accuracy_landconversion_cost <- 0.05         # def = 0.05
# What is the maximum number of iterations if the precision goal is not reached?
cfg$calib_maxiter_landconversion_cost <- 40           # def = 40
# Restart from existing calibration factors (TRUE or FALSE)
cfg$restart_landconversion_cost <- FALSE           # def = FALSE
# Number of lowpass filter iterations applied on calibration factors 
# for time steps 1995-2015
cfg$lowpass_filter_landconversion_cost <- 1        # def= 1
# Set upper limit for cropland calibration factor
cfg$cost_calib_max_landconversion_cost <- 3         # def= 3
# Set lower limit for cropland calibration factor
cfg$cost_calib_min_landconversion_cost <- 0.05            # def= 0.05
# Selection type of calibration factors.
# If FALSE, calibration factors from the last iteration are used.
# If TRUE, calibration factors from the iteration with the lowest divergence are used.
cfg$best_calib_landconversion_cost <- FALSE     # def = FALSE

# Settings for NPI/NDC recalculation
# * (TRUE): NPI/NDC recalculation will be performed
# * (ifneeded): NPI/NDC recalculation will only be executed if current input files are zero
# *             and policy switches (c32_aff_pol, c35_ad_pol) are set to "npi" or "ndc".
# *             If policy switches are set to "none" (default) NPI/NDC recalculation will not be performed
# * (FALSE): NPI/NDC recalculation will not be performed
cfg$recalc_npi_ndc <- "ifneeded"    # def = ifneeded
# * which national or subnational mappinng should be used
# * (iso): policies on the national levels
# * (bra): includes subnational policies for Brazil
cfg$policyregions <- "bra"           # def = "bra"

#### magpie.gms settings ####
cfg$gms <- list()

# Set number of time steps (1-16) or type "less_TS" for remind time steps
cfg$gms$c_timesteps <- "coup2100"

# historic time steps
cfg$gms$c_past <- "till_2010"

# use of gdx files
cfg$gms$s_use_gdx <- 0  # def = 0
#*                   0:  gdx will not be loaded
#*                   1:  gdx is loaded in the first time step
#*                   2:  gdx is loaded in all time steps

# **----------------------------------------------------------------------------
# ***                           MODULES
# ***---------------------------------------------------------------------------

#### Useful shortcuts ####
# Vector of all iso countries (used for regional policy implementations)
all_iso_countries <- "ABW,AFG,AGO,AIA,ALA,ALB,AND,ARE,ARG,ARM,
                      ASM,ATA,ATF,ATG,AUS,AUT,AZE,BDI,BEL,BEN,
                      BES,BFA,BGD,BGR,BHR,BHS,BIH,BLM,BLR,BLZ,
                      BMU,BOL,BRA,BRB,BRN,BTN,BVT,BWA,CAF,CAN,
                      CCK,CHN,CHE,CHL,CIV,CMR,COD,COG,COK,COL,
                      COM,CPV,CRI,CUB,CUW,CXR,CYM,CYP,CZE,DEU,
                      DJI,DMA,DNK,DOM,DZA,ECU,EGY,ERI,ESH,ESP,
                      EST,ETH,FIN,FJI,FLK,FRA,FRO,FSM,GAB,GBR,
                      GEO,GGY,GHA,GIB,GIN,GLP,GMB,GNB,GNQ,GRC,
                      GRD,GRL,GTM,GUF,GUM,GUY,HKG,HMD,HND,HRV,
                      HTI,HUN,IDN,IMN,IND,IOT,IRL,IRN,IRQ,ISL,
                      ISR,ITA,JAM,JEY,JOR,JPN,KAZ,KEN,KGZ,KHM,
                      KIR,KNA,KOR,KWT,LAO,LBN,LBR,LBY,LCA,LIE,
                      LKA,LSO,LTU,LUX,LVA,MAC,MAF,MAR,MCO,MDA,
                      MDG,MDV,MEX,MHL,MKD,MLI,MLT,MMR,MNE,MNG,
                      MNP,MOZ,MRT,MSR,MTQ,MUS,MWI,MYS,MYT,NAM,
                      NCL,NER,NFK,NGA,NIC,NIU,NLD,NOR,NPL,NRU,
                      NZL,OMN,PAK,PAN,PCN,PER,PHL,PLW,PNG,POL,
                      PRI,PRK,PRT,PRY,PSE,PYF,QAT,REU,ROU,RUS,
                      RWA,SAU,SDN,SEN,SGP,SGS,SHN,SJM,SLB,SLE,
                      SLV,SMR,SOM,SPM,SRB,SSD,STP,SUR,SVK,SVN,
                      SWE,SWZ,SXM,SYC,SYR,TCA,TCD,TGO,THA,TJK,
                      TKL,TKM,TLS,TON,TTO,TUN,TUR,TUV,TWN,TZA,
                      UGA,UKR,UMI,URY,USA,UZB,VAT,VCT,VEN,VGB,
                      VIR,VNM,VUT,WLF,WSM,YEM,ZAF,ZMB,ZWE"

# * Based on https://tntcat.iiasa.ac.at/SspDb/dsd?Action=htmlpage&page=10#regiondefs
oecd90andEU <- "ALB,AUS,AUT,BEL,BIH,BGR,CAN,CYP,CZE,DNK,EST,FIN,FRA,
                DEU,GRC,HUN,HRV,ISL,IRL,ITA,JPN,LUX,LVA,LTU,MLT,MNE,
                NLD,NOR,NZL,POL,PRT,ROU,SRB,SVK,SVN,ESP,SWE,CHE,MKD,TUR,
                GBR,USA"

# ***---------------------    09_drivers   ----------------------------------------
# * (aug17): default drivers
cfg$gms$drivers <- "aug17"          # def = aug17
cfg$gms$c09_pop_scenario  <- "SSP2"    # def = SSP2
cfg$gms$c09_gdp_scenario  <- "SSP2"    # def = SSP2
# *   options:   SSP: "SSP1", "SSP2", "SSP2EU", "SSP3", "SSP4", "SSP5"
# *              SDP: "SDP", "SDP_EI",  "SDP_MC", "SDP_RC"
# * Note: SSP2EU a European Commission population/income scenario for
# *       Ariadne project. SDP is same as SSP1 income, while SDP_EI, SDP_RC, SDP_MC
# *       see different GDP trajectories as described in SHAPE project.

# * Physical activity level scenario:
cfg$gms$c09_pal_scenario  <- "SSP2"    # def = SSP2
# *   options:   SSP: "SSP1", "SSP2", "SSP2EU", "SSP3", "SSP4", "SSP5"
# *              SDP: "SDP", "SDP_EI",  "SDP_MC", "SDP_RC"

# Year until which all parameters are fixed to SSP2 values
cfg$gms$sm_fix_SSP2 <- 2020

# Year until which all parameters affected by climate change are fixed to historical values
cfg$gms$sm_fix_cc <- 2020

# ***---------------------    10_land   ----------------------------------------
# * (landmatrix_dec18): includes a land transition matrix
cfg$gms$land <- "landmatrix_dec18"          # def = landmatrix_dec18

# * Artificial cost for balance variables (USD05MER per ha)
# * The balance variables in the land module avoid infeasibilities due to
# * differences in accuracy between parameters and variables in GAMS.
# * High costs make sure that the balance variables are only used as a last resort.
cfg$gms$s10_cost_balance  <- 1000000   # def = 1000000


# ***---------------------    11_costs   ------ --------------------------------
# * (default): default cost realization
cfg$gms$costs <- "default"          # def = default

# ***---------------------    12_interest_rate ---------------------------------
# * (select_apr20): regional interest rates dependent on development state
cfg$gms$interest_rate <- "select_apr20"          # def = select_apr20

# * Interest rate scenario:
# * Options:  coupling      (exogenous interest rate)
# *           gdp_dependent (regional interest rate dependent on development state)
# * Note: Currently, coupling is included as an option of an exogenous interest
# *       rate scenario. It is currently not part of coupled runs with REMIND.
# * Note: In the gdp_dependent scenario, the selected interest rate fully takes
# *       effect in 2050. It slowly starts fading in by 2025.
cfg$gms$c12_interest_rate <- "gdp_dependent"      # def = "gdp_dependent"

# * Interest rate coefficients:
# * The coefficients determine the regionally specific interest rate. They do
# * not represent the value of the interest rate.
# * The s12_interest_lic coefficient determines the intercept for future interest
# * rate determination. It represents the interest rate in low income countries.
cfg$gms$s12_interest_lic <- "0.1"         # def = 0.1
# * The s12_interest_hic determines the speed of interest rate adjustment for
# * future interest rates. It represents the interest rate in high income countries.
cfg$gms$s12_interest_hic <- "0.04"         # def = 0.04
# * Analog logic applies to historic interest rate coefficients
cfg$gms$s12_hist_interest_lic <- "0.1"    # def = 0.1
cfg$gms$s12_hist_interest_hic <- "0.04"    # def = 0.04
# * Note: It is also possible to choose a global interest rate by setting the
# * upper (s12_interest_lic) and the lower (s12_interest_hic) bound equal
# * This was formerly used for SSP runs and was set to SSP1, SSP5: 0.07 (hist),
# * 0.04 (future), SSP2: 0.07 (hist, future), SSP3: 0.07 (hist), 0.1 (future),
# * SSP4: s12_interest_lic=0.1, s12_interest_hic=0.04, s12_hist_interest_lic=0.07,
# * s12_hist_interest_hic=0.07

# * Regional interest rate policy scenario switch
# * Options:  list of iso-codes of countries where above selected coefficients
# *           should be in effect.
# * In all other countries, alternative coefficients (s12_interest_lic_noselect, s12_interest_hic_noselect,
# * s12_hist_interest_lic_noselect, s12_hist_interest_hic_noselect) that can be selected below
# * are in effect.
# * Note: must be written in the format: "IND, BRA, DEU"
# * Default: all iso countries
cfg$gms$select_countries12  <- all_iso_countries      # def = all_iso_countries

# * Interest rate coefficients for non-selected countries:
cfg$gms$s12_interest_lic_noselect <- "0.1"         # def = 0.1
cfg$gms$s12_interest_hic_noselect <- "0.04"         # def = 0.04
cfg$gms$s12_hist_interest_lic_noselect <- "0.1"    # def = 0.1
cfg$gms$s12_hist_interest_hic_noselect <- "0.04"    # def = 0.04


# ***---------------------    13_tc    -----------------------------------------
# * (endo_jan22): endogenous technological change with full cost accounting and
# *               stepwise updated crop and managed pastures area information
# * (exo): exogenous technological change (removes non-linearities from the model);
# *     requires an existing model run with endo tc for generating the input file
# *     f13_tau_scenario.csv
cfg$gms$tc <- "endo_jan22"              # def = endo_jan22

# * tc cost scenario crops: low, medium or high
cfg$gms$c13_tccost <- "medium"    # def = medium

# * ignore historical tau (1) or use it as lower bound (0)
cfg$gms$s13_ignore_tau_historical <- 1    # def = 1

# * Maximum regional tech cost expressed as share of regional GDP
# *   A meaningful value would be 0.002. However, this bound causes infeasibilities in some cases.
# *   Therefore, this bound is not used in the current model version.
cfg$gms$s13_max_gdp_shr <- Inf # def = Inf


# ***---------------------    14_yield    --------------------------------------
# * (managementcalib_aug19): calibrate potential LPJmL-yields to FAO regional numbers,
# *                          pasture yields increase based on exogenous demand-side proxy
# *                          for growth rate of cattle stocks
cfg$gms$yields <- "managementcalib_aug19"          # def = managementcalib_aug19

# * yield scenario
# *   options:   cc        (climate change)
# *             nocc       (no climate change)
# *             nocc_hist  (no climate change after year defined by sm_fix_cc)
cfg$gms$c14_yields_scenario  <- "cc"   # def = "cc"

# * switch determing the effectivity of translating crop tc into pasture yield
# * increase. Value has to be in the range of 0 (no pasture yield growth)
# * and 1 (pasture yields increase linearily with tau). Only used in the realizations:
# * biocorrect (tc of current time step) and managementcalib (tc of previous time step).
cfg$gms$s14_yld_past_switch <- 0.25           # def = 0.25

# * Switch that allows selecting how yield calibration factors will be calculated.
# * If 0, crop yields calibration will be calculated as multiplicative relative values.
# * If 1, calibration values will be limited to additive absolute values when modeled yields strongly
# * underestimate historical values. For more information, read the description on the 'preloop'
# * file of module 14_yield.
# * options: 1 (limit to absolute values)
# *          0 (pure relative calibration)
cfg$gms$s14_limit_calib <- 1       # def = 1

# * Switch on scaling of irrigated yields to AQUASTAT irrigated-to-rainfed yield
# * ratio on regional scale
# NOTE: It is recommended to recalibrate the model when changing this setting!
cfg$gms$s14_calib_ir2rf <- 1       # def = 1

# * Switch to include yield impacts of land degradation.
# * The state of yield-relevant nature's contributions to people (NCP)
# * is reported through ./modules/14_yields/input/f14_yld_ncp_report.cs3
# * based on estimated outcomes for soil loss or pollination sufficiency
# * per cluster from an existing model run.
# * options: 1 (yields are reduced based on yield reduction coefficients)
# *          0 (land degradation is switched off)
cfg$gms$s14_degradation <- 0      # def = 0

# Switch to toggle the use of yield calibration factors (that resulted from a calibration run).
# If 0, no yield calibration factors are used, meaning all calibration factors are set to 1.
# If 1, yield calibration factors are used. (For this option to function, either an existing calibration file
# must be supplied in the input directory, or yields must be recalibrated during preprocessing.)
# This switch should only be activated for penalty_apr22 crop realization.
# For other realizations, it is recommended not to use this yield calibration.
cfg$gms$s14_use_yield_calib <- 0    # def = 0

# Include a minimum yield for wood harvest in secondary vegetation (tDM per ha per yr).
# Age classes with wood yields below this threshold have a production of zero.
cfg$gms$s14_minimum_wood_yield <- 20   #def = 20

# ***---------------------    15_food    ---------------------------------------
# * (anthropometrics_jan18): estimates food using scenario dependent regression
# *                          and demography drivers
# * (anthro_iso_jun22): estimates food using scenario dependent regression
# *                          and demography drivers on iso level
cfg$gms$food <- "anthro_iso_jun22"            # def = anthro_iso_jun22

# * switch between exogenous and endogenous food demand
# *  options: 0 (exogenous food demand) and 1 (endogenous food demand)
cfg$gms$s15_elastic_demand <- 0            # def =0

# * maximal number of iterations between food and magpie model before
# * simulation proceeds to next time step
cfg$gms$s15_maxiter <- 5                   # def = 5

# * convergence criteria: maximal allowed country-wise deviation in calculated
# *                       real income between iterations
cfg$gms$s15_convergence <- 0.005            # def = 0.005

# * food scenario for selected (and respectively not selected) countries
# * in scen_countries15
# *   options:   SSP: "SSP1", "SSP2", "SSP3", "SSP4", "SSP5"
# *             SRES: "A1", "A2", "B1", "B2"
# *            OTHER: "PB" (planetary boundaries)
cfg$gms$c15_food_scenario <- "SSP2"                 # def = SSP2
cfg$gms$c15_food_scenario_noselect <- "SSP2"        # def = SSP2

# * Temporal development of ruminant meat share within the livestock food product
# * group (applied before food demand model is executed)
# *   options:   constant, halving2050, mixed
cfg$gms$c15_rum_share <- "mixed"             # def = mixed

# * Stronger ruminant fadeout in India
# *   options:  0 (=off), 1 (=on)
cfg$gms$s15_rum_share_fadeout_india_strong <- 1             # def = 1

# * Milk share fadeout in India within the livestock food product
# * group (applied before food demand model is executed)
# *   options:  0 (=off), 1 (=on)
cfg$gms$s15_milk_share_fadeout_india <- 1             # def = 1

# * Food substitution scenarios including functional forms, targets
# * and transition periods (applied after food demand model is executed)
# * options consist of 3 parts: functional form (lin,sigmoid), target (zero, 20pc, 50pc, 80pc, 90pc) and transition period (10_50: from 2010 to 2050, 20_50: from 2020 to 2050)
# * Example for sigmoid_50pc_20_50:
# *   Functional form: sigmoid (S-shaped)
# *   Target: 50percent reduction at end of transition period (2050 in this case)
# *   Transition period: start in 2020, end in 2050
# *   options:   constant,
# *              lin_zero_10_50, lin_zero_20_50, lin_zero_20_30, lin_zero_20_70, lin_50pc_20_50, lin_50pc_20_50_extend65, lin_50pc_20_50_extend80,
# *              lin_50pc_10_50_extend90, lin_75pc_10_50_extend90, lin_80pc_20_50, lin_80pc_20_50_extend95, lin_90pc_20_50_extend95,
# *              lin_99-98-90pc_20_50-60-100, sigmoid_20pc_20_50, sigmoid_50pc_20_50, sigmoid_80pc_20_50
cfg$gms$c15_rumscen <- "constant"                         # def = constant
cfg$gms$c15_fishscen <- "constant"                        # def = constant
cfg$gms$c15_alcscen <- "constant"                         # def = constant
cfg$gms$c15_livescen <- "constant"                        # def = constant
cfg$gms$c15_rumdairy_scp_scen <- "constant"               # def = constant
cfg$gms$c15_rumdairyscen <- "constant"                    # def = constant

# * Set items of kfo_rd. This option allows for sensitivity scenarios.
# * kfo_rd is used in the food substitution scenarios c15_rumdairy_scp_scen and c15_rumdairyscen (see above)
# *   options:  "livst_rum,livst_milk", "livst_rum" or "livst_milk"
cfg$gms$kfo_rd <- "livst_rum"                             #def = livst_rum

# * Reduction of livestock products towards a kcal/cap/day intake target with or w/o substitution
# * maximum kcal/cap/day intake target used for downwards convergence of livestock products
cfg$gms$s15_kcal_pc_livestock_intake_target <- "430"   # def = 430
# * choice temporal fade-out towards s15_kcal_pc_livestock_intake_target
# *   options:  constant, lin_zero_10_50, lin_zero_20_50, lin_zero_20_30, lin_zero_20_70
cfg$gms$c15_livescen_target <- "constant"           # def = constant
# * fade-out of livestock products (0) or substitution of livestock products with plant-based products (1)
# *   options:  0 (=fade-out), 1 (=substitution)
cfg$gms$s15_livescen_target_subst <- 1        # def = 1


# ***** Start configuration of exogenous food intake and waste scenarios *****
#
#
# * switch for transition to food waste scenarios
# * (1):      transition towards exogenous food waste target
# * (0):      regression-based estimation of food waste
cfg$gms$s15_exo_waste <- 0               # def = 0
#
# * scenario target for the ratio between food demand and intake
# * only activated if s15_exo_waste is set to 1
# *   options: scalars >1
# * (1.1):  corresponds to 10% food waste ~ quarter waste of HIC
# * (1.2):  corresponds to 20% food waste ~ half waste of HIC
cfg$gms$s15_waste_scen <- 1.2          # def = 1.2

# * Switch for transition to exogenous diet scenarios
# * (EAT Lancet and National Institute of Nutrition (NIN))
# * (3):  MAgPIE-specific realization of the EAT-Lancet diet, where model-internal
# *       (regression-based) food demand projections are constrained by ranges for
# *       intake targets of food groups to ensure healthy and sustainable diets as
# *       recommended by the EAT-Lancet Commission (following Springmann et al. 2018 and Willett et al. 2019)
# * (2):  transition towards exogenous diets (NIN for India and EAT for other regions)
# *       Please use this switch in combination with cfg$gms$c15_EAT_scen <- "FLX_hmilk"
# *       If only India's diet needs to be changed, then set cfg$gms$scen_countries15 <- "IND"
# * (1):  transition towards exogenous diets and food demand parametrized
# *       to a food-specific data set published by the EAT-Lancet Commission
# *       (Willett et al., 2019). This EATLancet implementation is deprecated.
# *       Please use MAgPIE-specific realization of the EAT-Lancet diet (3)
# *       for EATLancet diet.
# * (0):  regression-based estimation of diets and food demand
cfg$gms$s15_exo_diet <- 0               # def = 0

# * exogenous calorie scenario (EAT Lancet diet scenarios)
# * only activated if s15_exo_diet is > 0
# *   options:   healthy_BMI, 2100kcal, 2500kcal,
# *              endo, no_underweight, no_overweight
# *              half_overweight, no_underweight_half_overweight
# * healthy_BMI: all people have a BMI of 20-25
# * no_underweight: all people with BMI<20 have a BMI 20-25
# * no_overweight: all people with BMI>25 have a BMI 20-25
# * half_overweight: number of people with BMI>25 is halved compared to baseline (have BMI 20-25 instead)
# * no_underweight_half_overweight: combination of no_underweight and half_overweight
# * endo: no changes with respect to endogenous BMI
# * 2100kcal, 2500kcal: an exogenous target of 2100 or 2500 kcal, all
# * people have a BMI 20-25.
cfg$gms$c15_kcal_scen <- "healthy_BMI"       # def = healthy_BMI
#
# * exogenous food-specific diet scenario (EAT Lancet diet scenarios)
# * only activated if s15_exo_diet is 1 or 2
# *   options:   BMK, FLX, PSC, VEG, VGN, FLX_hmilk, FLX_hredmeat
cfg$gms$c15_EAT_scen <- "FLX"                # def = FLX

# * Sub-specifications: Which commodities shall be included in the diet shift
# * towards the selected scenario diet? Only selected (1) commodities will be
# * included, while the others will remain to be endogenous.
# * Any shift will be compensated to reach the calorie target by adjusting
# * staple calories.
cfg$gms$s15_exo_monogastric  <- 1   # def = 1, options: 0,1
cfg$gms$s15_exo_ruminant     <- 1   # def = 1, options: 0,1
cfg$gms$s15_exo_fish         <- 1   # def = 1, options: 0,1
cfg$gms$s15_exo_fruitvegnut  <- 1   # def = 1, options: 0,1
cfg$gms$s15_exo_roots        <- 1   # def = 1, options: 0,1 (only relevant for new EATLancet realization s15_exo_diet=3)
cfg$gms$s15_exo_pulses       <- 1   # def = 1, options: 0,1
cfg$gms$s15_exo_sugar        <- 1   # def = 1, options: 0,1
cfg$gms$s15_exo_oils         <- 1   # def = 1, options: 0,1
cfg$gms$s15_exo_brans        <- 0   # def = 0 (as no target defined in EATLancet, they are kept at their projected level, unless switch activated (1), then brans are set to 0), options: 0,1
cfg$gms$s15_exo_scp          <- 1   # def = 1, options: 0,1

# * Scenario target for the inclusion of alcohol in the EAT-Lancet diet
# * The EAT-Lancet diet only allows for added sugars,
# * but does not include processed food or alcohol.
# * Only activated if s15_exo_diet is set to 1 or 3
cfg$gms$s15_exo_alcohol <- 1        # def = 1, options: 0,1
# * Via 's15_alc_scen' a maximum target for alcohol consumption can be defined.
# * Only activated if s15_exo_alcohol = 1
# * (0):      no alcohol consumption, as in the original version of the EAT-Lancet diet
# * (0.014):  maximum target for alcohol consumption is 1.4% of total calorie consumption
# *           (see Lassen et al., 2020)
cfg$gms$s15_alc_scen <- 0               # def = 0
#
#
# * Switch and specification of countries for which exogenous food scenarios
# * (EAT Lancet diet and food waste scenarios), food substitution scenarios and
# * c15_food_scenario shall be applied
# * Options:  list of iso-codes of countries where exogenous scenario should be
# *           in effect
# * Note: must be written in the format: "IND, BRA, DEU"
# * Default: all iso countries
cfg$gms$scen_countries15  <- all_iso_countries
#
# * Transition to exogenous food intake and waste scenarios including functional forms, targets
# * and transition periods (applied after the food demand model is executed). The resulting scenario
# * parametrisation is a linear combination of the default MAgPIE parametrisation and the exogenous
# * scenario data input.
# * Options consist of 3 parts: functional form (lin, sigmoid), target (zero, 20pc, 50pc, 80pc, 90pc;
# * pc: percent) and transition period (10_50: from 2010 to 2050, 20_50: from 2020 to 2050).
# * The target defines the relative contribution of the default MAgPIE parametrisation, e.g. zero
# * defines a full transition to the exogenous scenario data input.
# *              Examples with target year y2030:  lin_zero_20_30
# *              Examples with target year y2050:  lin_zero_20_50
# *              Examples with target year y2070:  lin_zero_20_70
# * For the full list of available options, see information on food substitution scenarios above.
# * Only active if at least one of the exogenous food intake and waste scenario
# * switches (s15_exo_diet and s15_exo_waste) is set to 1.
cfg$gms$c15_exo_foodscen <- "lin_zero_20_50"                    # def = lin_zero_20_50
# ***** End configuration of exogenous food intake and waste scenarios *****


# * calibration to historical values
# *   options:   0, 1
cfg$gms$s15_calibrate <- 1             # def = 1


# ***---------------------    16_demand    -------------------------------------
# * (sector_may15): default for flexible regions
cfg$gms$demand <- "sector_may15"                # def = sector_may15

# ***---------------------    17_production    ---------------------------------
# * (flexreg_apr16): default production aggregation
cfg$gms$production <- "flexreg_apr16"          # def = flexreg_apr16

#* Additional switch to initialize cellular production
# * (on) : it initializes cellular production
# * (off) : it does not initialize cellular production
cfg$gms$c17_prod_init <- "on"         # default = on

# ***---------------------    18_residues    -----------------------------------
# * (flexreg_apr16): detailed residue calculations
# * (off): off
cfg$gms$residues <- "flexreg_apr16"            # def = flexreg_apr16

# * residue on field burning
# * options:   phaseout - phaseout of residue burning to minimum burn share (0-10%)
# *            constant - constant shares of on field burning (15-25%)
cfg$gms$c18_burn_scen <- "phaseout"                     # def = phaseout


# ***---------------------    20_processing    ---------------------------------
# * (substitution_may21)  : processing with couple products allowing for substitution
# * (off): off
cfg$gms$processing <- "substitution_may21"        # def = substitution_may21


# * SCP route
# * single-cell microbial protein production route
# *   options: mixed, methane, sugar, cellulose, hydrogen
# * Mapping of scp route to feedstock: methane:foddr, sugar:sugar_cane, cellulose:begr
# * Note that hydrogen does not require land-based inputs
# * Mixed assumes equal shares of methane, sugar, cellulose and hydrogen
cfg$gms$c20_scp_type <- "sugar"                         # def = sugar

# ***---------------------    21_trade    --------------------------------------
# * (free_apr16):       free trade without restrictions
# * (off):              no trade at all
# * (exo):              exogenously prescribed trade
# * (selfsuff_reduced): self-sufficiency based trade with trade costs related to exports
# * (selfsuff_reduced_bilateral22): same as `selfsuff_reduced` but with bilateral trade flows
cfg$gms$trade <- "selfsuff_reduced"             # def = selfsuff_reduced

# * option for `exo` realization only:
# * fix `v21_manna_from_heaven` to zero (0) or not (1)
# Note: Without fixing to zero, v21_manna_from_heaven might be used unnecessarily in runs started with highres.R
cfg$gms$s21_manna_from_heaven <- 0

# * options for `selfsuff_reduced` and `selfsuff_reduced_bilateral22` realizations:
# * Commodities that can have additional imports to maintain feasibility
cfg$gms$k_import21 <- "wood, woodfuel"
# * Cost for additional imports to maintain feasibility in USD05MER per tDM
cfg$gms$s21_cost_import <- 10000               # def = 10000

# * trade balance reduction scenario
# * (l909090r808080):   10 percent trade liberalisation for secondary and
# *                     livestock products in 2030,2050,2100 and 20 percent for
# *                     crops
# * (l908080r807070):   livestock/secondary: 10% in 2030, 20% in 2050,2100
# *                     crops: 20% in 2030, 30% in 2050,2100
# * (l909595r809090):   livestock/secondary: 10% in 2030, 5% in 2050,2100
# *                     crops: 20% in 2030, 10% in 2050,2100
# * Initial values for the trade balance reduction in 1995 are 1, i.e. all trade in
# * 1995 happens through the self-sufficiency pool. For later time steps, additional
# * scenarios of trade liberalization (i.e. of allocation to the comparative advantage pool)
# * are implemented based on Schmitz et al. 2012 (also described in Popp et al. 2017)
cfg$gms$c21_trade_liberalization  <- "l909090r808080"     # def = l909090r808080

# * Fraction to ease self sufficiency pool trade for roundwood
cfg$gms$s21_trade_bal_damper <- 0.65 # def 0.65

# * whether trade tariff should be considered at all
# * (0) without trade tariff
# * (1) with  trade tariff
cfg$gms$s21_trade_tariff <- 1               # def =1

# * whether to fade out trade tariffs (bilateral trade realization) # def = 0
cfg$gms$s21_trade_tariff_fadeout <- 0

# * start year of fadeout if s21_trade_tariff_fadeout = 1 # def = 2020
cfg$gms$s21_trade_tariff_startyear <- 2020

# * end year of fadeout if s21_trade_tariff_fadeout = 1 # def = 2050
cfg$gms$s21_trade_tariff_targetyear <- 2050

# ***---------------------    22_land_conservation    --------------------------------------
# * (area_based_apr22):    Area-based conservation (baseline and future)
# *                        based on WDPA and conservation priority areas
cfg$gms$land_conservation  <- "area_based_apr22"           # def = area_based_apr22

# * Additional land conservation target based on conservation priority areas
# * during future time steps (after `cfg$gms$sm_fix_SSP2`).
# * ("none")              No additional land conservation target (WDPA only)
# * ("30by30")            30 % of global land surface in Key Biodiversity Areas (KBA),
# *                       GSN Distinct Species Assemblages & Critical Connectivity Areas + WDPA
# * ("KBA")               Key Biodiversity Areas + WDPA
# * ("GSN_DSA")           Global Safety Net: Distinct Species Assemblages + WDPA
# * ("GSN_RarePhen")      Global Safety Net: Rare Phenomena + WDPA
# * ("GSN_AreaIntct")     Global Safety Net: Areas of Intactness + WDPA
# * ("GSN_ClimTier1")     Global Safety Net: Climate Stabilisation Tier 1 + WDPA
# * ("GSN_ClimTier2")     Global Safety Net: Climate Stabilisation Tier 2 + WDPA
# * ("CCA")               Critical Connectivity Areas (Brennan et al. 2022) + WDPA
# * ("IrrC_XXpc")         Land area that covers XX percent of total global irrecoverable carbon
# *                       as defined by Noon et al. (2022), where XX correponds to either
# *                       50, 75, 95, or 99 percent + WDPA
# * ("IrrC_XXpc_30by30")  30by30 + Land area that covers XX percent of total global irrecoverable
# *                       carbon as defined by Noon et al. (2022), where XX correponds to either
# *                       50, 75, 95, or 99 percent + WDPA
# * ("BH")                Biodiversity Hotspots + WDPA
# * ("IFL")               Intact Forest Landscapes + WDPA
# * ("BH_IFL")            Biodiversity Hotspots + Intact Forest Landscapes  + WDPA
# * ("GSN_HalfEarth")     Full protection of areas within the Global Safety Net, which
# *                       roughly corresponds to 50 percent of the global land surface
# * ("PBL_HalfEarth")     Ecoregion-based approach to protecting half of the global land surface
# * Note: c22_protect_scenario applies to countries selected in policy_countries22
# * c22_protect_scenario_noselect applies to all other countries.
cfg$gms$c22_protect_scenario <- "none"      # def = None
cfg$gms$c22_protect_scenario_noselect <- "none"     # def = None
# * Switch and specification of countries for which land conservation policies in
# * c22_protect_scenario apply.
# * Options: list of iso-codes of countries where land conservation should be applied
# * Note: must be written in the format: "IND, BRA, DEU"
# * Default: all iso countries
cfg$gms$policy_countries22  <- all_iso_countries

# * Whether land restoration is carried out in areas targeted by land conservation
# * (1) Land is fully restored in conservation priority areas
# * (0) Only remaining forest and other land areas are conserved
cfg$gms$s22_restore_land <- 1                # def = 1

# * Start and target year of land conservation option ('c22_protect_scenario').
# * Defines when full protection based on 'future options' is reached, using a
# * sigmoidal trajectory. NOTE: This switch is only relevant
# * if one of the 'future options' (e.g. BH) is chosen.
# * Start year:
cfg$gms$s22_conservation_start <- 2020       # def = 2020
# * Target year (year when full protection is reached):
cfg$gms$s22_conservation_target <- 2030       # def = 2030

# ***---------------------    29_ageclass    -----------------------------------
# * (feb21): Distribution of age-classes according to Poulter et al 2018
cfg$gms$ageclass    <- "feb21"               # def = feb21

# ***---------------------    30_crop    ---------------------------------------
# * (endo_apr21): Hard rotational constraints. Dynamic cropland and detailed cropland availability data at grid cell level.
# * (rotation_apr22): hard rotational constraints and fallow constraints with the option of different future scenarios. Dynamic cropland and detailed cropland availability data at grid cell level.
# * (penalty_apr22): rotational and fallow constraints are incentivized via penalty payments. Dynamic cropland and detailed cropland availability data at grid cell level.
# NOTE: It is recommended to recalibrate the model when changing this setting!
cfg$gms$crop    <- "endo_apr21"               # def = endo_apr21
# * (c30_bioen_type): switch for type of bioenergy crops; options: begr, betr, all
cfg$gms$c30_bioen_type <- "all"               # def = "all"
# * (c30_bioen_water): switch for irrigation of bioenergy crops; options: rainfed, irrigated, all
cfg$gms$c30_bioen_water <- "rainfed"          # def = "rainfed"
# * (c30_rotation_constraints): switch for rotational constraints: on, off
cfg$gms$c30_rotation_constraints <- "on"       # def = "on"
# * (c30_rotation_scenario): scenarios for constraints.
# * In realization rotation_apr22: min (minimal constraints), default (best guess), good (good practice),
# * good_20div (good practice - 20% for other crops), setaside (default plus fallow),
# * legumes (minimum share of legumes), agroforestry (minimum share of perennials), sixfoldrotation
# * (crops can only repeat after 6 years), agroecology (mix of previous scenarios)
# * In realization penalty_apr22: none (no incentives), default (best guess), fallow (increased fallow incentives),
# * legumes (increased incentives for legumes), agroforestry (increased incentives for perennials), agroecology (mix)
# * In realization endo_apr21: no scenarios exist.
cfg$gms$c30_rotation_scenario <- "default"     # def = "default"
# * Year by which rotation scenario is fully implemented:
# * Start year:
cfg$gms$s30_rotation_scenario_start <- 2020       # def = 2020
# * Target year (year when full implementation is reached):
cfg$gms$s30_rotation_scenario_target <- 2050       # def = 2050


# * Switch to determine whether marginal land (suitability index below 0.33) should be included
# * in the total available cropland. Options are:
# * ("all_marginal"): All marginal land can be used for crop cultivation
# * ("q33_marginal"): The bottom tertile of marginal land is excluded
# * ("no_marginal"): Marginal land is completely excluded from crop cultivation
# * Note: Option "q33_marginal" produces the highest spatial correlation
# * with observed cropland patterns and is recommended for productive runs.
cfg$gms$c30_marginal_land <- "q33_marginal"   # def = "q33_marginal"

# * Share of available cropland that is withheld for maintaining semi-natural vegetation (SNV)
# * in each square km in cropland areas, including grassland, forest and other land. For example,
# * a share of 0.2 corresponds to 20 % of SNV in terms of the available cropland.
# * The amount of cropland relocation is estimated based on external high resolution
# * land cover information from the Copernicus Global Land Service for the year 2019.
# * Accepted sensible values are between 0 and 0.5
# Note: s30_snv_shr applies to countries selected in policy_countries30
# s30_snv_shr_noselect applies to all other countries.
cfg$gms$s30_snv_shr <- 0                # def = 0
cfg$gms$s30_snv_shr_noselect <- 0       # def = 0
# * Year by which SNV policy ('s30_snv_shr') is fully implemented.
# * Start year (should be close to 2019):
cfg$gms$s30_snv_scenario_start <- 2020       # def = 2020
# * Target year (year when full implementation is reached):
cfg$gms$s30_snv_scenario_target <- 2030       # def = 2030
# * Switch and specification of countries for which SNV policy in
# * s30_snv_shr apply.
# * Options: list of iso-codes of countries where SNV policy should be applied
# * Note: must be written in the format: "IND, BRA, DEU"
# * Default: all iso countries
cfg$gms$policy_countries30  <- all_iso_countries
# * Land types included in the SNV policy. This option allows for sensitivity analyses.
# * plausible options:  "secdforest, forestry, past, other",
# *                     "secdforest, other",
# *                     "secdforest, past, other" etc.
cfg$gms$land_snv <- "secdforest, forestry, past, other"    #def = "secdforest, forestry, past, other"

# ***---------------------    31_past    ---------------------------------------
# * (static):     static pasture
# * (endo_jun13): dynamic pasture
# * (grasslands_apr22): Grassland management separating managed pastures from rangelands
# NOTE: It is recommended to recalibrate the model when changing this setting!
cfg$gms$past <- "endo_jun13"               # def = endo_jun13

# * Factor requirements (USD04 per ton DM)
cfg$gms$s31_fac_req_past  <- 1             # def = 1

# * switch for unequal (1) or equal (0) sign in pasture production constraint q31_prod.
# * unequal means that pasture production can be lower than pasture area x pasture yield,
# * reflecting that not all pasture area is grazed.
cfg$gms$s31_unequal  <- 1             # def = 1

# * Scenario for grassland, pasture suitability areas and pasture yields (only take effect for realization grasslands_apr22)
# *   options:   cc        (climate change)
# *             nocc       (no climate change)
# *             nocc_hist  (no climate change after year defined by sm_fix_cc)
cfg$gms$c31_grassl_yld_scenario  <- "cc"   # def = "cc"

# * Switch that allows selecting how yield calibration factors will be calculated.
# * If 0, grassland yield calibration will be calculated as multiplicative relative values.
# * If 1, calibration values will be limited to additive absolute values when modeled yields strongly
# * underestimate historical values. For more information, read the description on the 'preloop'
# * file of module 31_past.

# * options: 1 (limit to absolute values)
# *          0 (pure relative calibration)
cfg$gms$s31_limit_calib <- 1       # def = 1

# ***---------------------    32_forestry    -----------------------------------
# * (dynamic_feb21):  Dynamic forestry sector including afforestation with detailed age-classes
cfg$gms$forestry  <- "dynamic_feb21"              # def = dynamic_feb21

# * afforestation planing horizon (years)
cfg$gms$s32_planing_horizon <- 50                # def = 50

# * Settings for CO2 price driven afforestation (Growth curve and BII)

# * Growth curve for CO2 price driven afforestation
# * Switch for using natural vegetation (0) or plantation (1) growth curves towards LPJmL natural
# * vegetation carbon density.
# * Afforestation following plantation growth curves reflects managed or assistent regrowth,
# * and might also include non-native species.
cfg$gms$s32_aff_plantation <- 0   # def = 0

# * BII coefficient for CO2 price driven afforestation
# * Switch for using secondary vegetation (0) or timber (1) BII coefficients for CO2 price driven afforestation
# * The recommend setting is to map the BII coefficient to the choice of the growth curve.
# * natural vegetation growth curve (0): secondary vegetation BII coefficient (0)
# * plantation growth curve (1): timber BII coefficient (1)
# * However, afforestation with plantations (1) could possibly be done in a biodiversity friendly way (0)
cfg$gms$s32_aff_bii_coeff <- 0    # def = 0

# Afforestation policy
# * ("none"): no prescribed afforestation
# * ("npi"): prescribed afforestation based on NPI policies
# * ("ndc"): prescribed afforestation based on NPI+NDC policies
cfg$gms$c32_aff_policy <- "npi"              # def = "npi"

# Maximum total global afforestation in Mha (Inf = no constraint)
# Note 1: the limit applies to the sum of endogenous CO2 price driven and exogenous NPI/NDC afforestation
# Note 2: a limit of 0 or below the level of exogenous NPI/NDC afforestation will be a automatically raised to the level of exogenous NPI/NDC afforestation
cfg$gms$s32_max_aff_area <- Inf              # def = Inf

# Protection of afforested areas (endogenous CO2 price driven)
# 0=until end of planning horizon (see s32_planing_horizon)
# 1=forever
# Note: Without a price on CO2 emissions from land-use change in module 32_forestry,
#       which is the current default (c56_emis_policy <- "reddnatveg_nosoil"),
#       the recommended setting for s32_aff_prot is 1.
#       Otherwise, the model can do re/afforestation on existing re/afforestation areas
#       after the end of planning horizon without penalty for CO2 emissions.
cfg$gms$s32_aff_prot <- 1              # def = 1

# Type of afforestation constraint
cfg$gms$s32_max_aff_area_glo <- 1              # def = 1
# * (1): global limit based on s32_max_aff_area
# * (0): regional limit based on the input file "f32_max_aff_area.cs4"

# Switch to determine whether afforestation should be limited to
# certain latitudinal zones
# * ("unrestricted"): No regions excluded
# * ("noboreal"): Exclude boreal regions > 50deg N
# * ("onlytropical"): Afforestation only in tropical areas 20deg S-20deg N
cfg$gms$c32_aff_mask <- "noboreal"            # def = "noboreal"

# Switch to determine whether biogeophysical responses to
# afforestation should be considered
# If this endogenous bgp effect is considered it is adviced to use the
# unrestricted afforestation mask
# to avoid superimposing the additional exogeneous bgp implementation
# * ("nobgp"): No biogeophysical influences
# * ("ann"): Annual BGP
# * ("djf"): Boreal winter BGP December January February
# * ("jja"): Boreal summer BGP June July August
cfg$gms$c32_aff_bgp <- "nobgp"              # def = "nobgp"

# Switch for the different TCRE estimates which are used to
# translate the BGP temperature effect into their carbon equivalent.
# The estimates encompass the ensemble mean +/- SD of 20 CMIP5 models.
# Ceq ~ BGP/TCRE - Hence, high TCRE decreases the BGP effect.
# * ("ann_TCREmean"): Ensemble mean
# * ("ann_TCREhigh"): Ensemble mean + SD
# * ("ann_TCRElow"): Ensemble mean - SD
cfg$gms$c32_tcre_ctrl <- "ann_TCREmean"

# Switch for dynamic timber plantations
# "off" means that timber plantations are initialized in the highest
# age class and that there is no regrowth seen in such plantations.
# In addition, timber plantations are fixed to 1995 levels in the "off" case.
# In other cases, age-classes in timber plantations are initialized based on
# rotation length and can change dynamically over time.
# Note that this switch has no effect in the "static_sep16" realization,
# in which forestry area is assumed static.
# * 0= off
# * 1= Equal distribution
# * 2= FAO distribution based on planted forest estimates 2006
# * 3= Poulter distribution
# * 4= Manual distribution - Similar to equal distribution but higher weight on
# *                          younger age-classes as plantation areas increase strongly
# *                          in recent history (ca. >1990).
cfg$gms$s32_initial_distribution         <- 0     # def = 0

# Switch fore regional or global interest rate for rotation length calculations.
# Using the global setting would mean that the timber plantation decisions are
# decoupled from other decisions in the model which are based on regional interest
# rates.
# * ("regional")  = Regionally differentiated interest rates
# * ("global")    = One global interest rate
cfg$gms$c32_interest_rate <- "regional"             # def = "regional"

# Global interest rate for plantations in case c32_interest_rate switch is global
# Accepted values between 0 and 1.
cfg$gms$s32_forestry_int_rate   <- 0.05              # def = 0.05

# Scenarios for using FAO scenarios of future proportion of production coming from
# Timber plantations used for deciding how much establishment should be made in
# simulation time step. This setting is only used when s32_hvarea is set to 2 ("Endogenous")
# * ("abare")  = Global outlook for plantations. Australian Bureau of Agriculture and Resource Economics (ABARE) and Jaakko Pöyry Consulting 1999
# * ("brown")  = The global outlook for future wood supply from forest plantations. Working paper GFPOS/WP/03 prepared for the 1999 Global Forest Products Outlook Study 1999
cfg$gms$c32_dev_scen <- "abare"             # def = "abare"

# Scenarios for future development of timber production contribution to roundwood demand
# based on the settings from c32_dev_scen.
# * ("constant") = Constant share over time (1995-2250)
# * ("h5s5l5")   = In every time step 5% increase from 1995 till 2020, 5% increase from 2025 till 2050, 5% increase from 2055 till 2250
# * ("h5s2l2")   = In every time step 5% increase from 1995 till 2020, 2% increase from 2025 till 2050, 2% increase from 2055 till 2250
# * ("h5s2l1")   = In every time step 5% increase from 1995 till 2020, 2% increase from 2025 till 2050, 1% increase from 2055 till 2250
# * ("h5s1l1")   = In every time step 5% increase from 1995 till 2020, 1% increase from 2025 till 2050, 1% increase from 2055 till 2250
# * ("h5s1l05")  = In every time step 5% increase from 1995 till 2020, 1% increase from 2025 till 2050, 0.5% increase from 2055 till 2250
# * ("h2s1l05")  = In every time step 2% increase from 1995 till 2020, 1% increase from 2025 till 2050, 0.5% increase from 2055 till 2250
cfg$gms$c32_incr_rate <- "h5s2l1"             # def = "h5s2l1"

# Harvesting switch for timber production
# * 0 = No harvested area from plantations, no age-class shifting (area held constant at 1995 levels)
# *     This also means that no harvesting or establishment of new plantations takes place.
# * 1 = "Exogenous" scenario. Harvested area from plantations but with age-class shifting
# *     All timber plantations are harvested at rotation age and are re-established
# *     such that the total plantation area remains constant.
# * 2 = "Endogenous" scenario. Harvest from plantations including age-class shifting
# *      All plantations are harvested at rotation age. Plantation establishment is endogenous.
cfg$gms$s32_hvarea = 0 # def = 0

# Type of rotation length selection criteria
# * ("mean_annual_increment")      = Harvesting when the average annual increment is maximum
# * ("current_annual_increment")    = Harvesting when the marginal increment is maximum
# * ("instantaneous_growth_rate")   = Harvest when instantaneous growth rate is equal to interest rate

cfg$gms$c32_rot_calc_type <- "current_annual_increment"

# Generic forest shock scenarios. Disturbance sets percentage of all age classes back to 0
# * ("none") No disturbance applied
# * ("002lin2030") Disturbance applied to 0p2 percent per year linear phase-in over 20yrs from 0 in 2030
# * ("004lin2030") Disturbance applied to 0p4 percent per year linear phase-in over 20yrs from 0 in 2030
# * ("008lin2030") Disturbance applied to 0p8 percent per year linear phase-in over 20yrs from 0 in 2030
# * ("016lin2030") Disturbance applied to 1p6 percent per year linear phase-in over 20yrs from 0 in 2030
cfg$gms$c32_shock_scenario = "none"     # def = "none"

# ***---------------------    34_urban   ---------------------------------------
# * 34_urban includes urban land
#   * (static) static urban land fixed on 1995 patterns from LUH2v2
#   * (exo_nov21) has exogenous future urban land patterns based on LUH2v2
cfg$gms$urban   <- "exo_nov21"                # def = exo_nov21

# * Additional settings for exo_nov21 realization only:
cfg$gms$c34_urban_scenario  <- "SSP2"    # def = SSP2
# *   options:   SSP: "SSP1", "SSP2", "SSP3", "SSP4", "SSP5"

# ***---------------------    35_natveg    --------------------------------------
# * 35_natveg includes primforest, secdforest and other land
# * (dynamic_feb21):  Dynamic natural vegetation land with detailed age-classes
cfg$gms$natveg  <- "dynamic_feb21"           # def = dynamic_feb21

# Avoided Deforestation policy
# * ("none"): no avoided deforestation
# * ("npi"): avoided deforestation based on NPI policies
# * ("ndc"): avoided deforestation based on NPI+NDC policies
cfg$gms$c35_ad_policy <- "npi"              # def = "npi"

# Avoided Other Land Conversion policy
# * ("none"): no avoided other land conversion
# * ("npi"): avoided other land conversion based on NPI policies
# * ("ndc"): avoided other land conversion based on NPI+NDC policies
cfg$gms$c35_aolc_policy <- "npi"              # def = "npi"

# Distribution of age-classes during secondary forest initialization
# * (0): All secondary forest belongs to highest age class
# * (1): Equal distribution of secondary forest in all age-classes
# * (2): Distribution of secondary forest according to Poulter et al 2018 based on MODIS satellite data
cfg$gms$s35_secdf_distribution <- 0             # def = 0

# Damages in natural forests
# * (0): No damage simulated
# * (1): Damage from shifting agriculture (constant)
# * (2): Damage from shifting agriculture is faded out by the year defined in 'cfg$gms$c35_forest_damage_end'
# * (4): Generic forest disturbance scenarios defined in `f35_forest_shock.csv`
cfg$gms$s35_forest_damage <- 2                  # def = 2
# * If option (2) above: Year by which damage from shifting agriculture has petered out
cfg$gms$s35_forest_damage_end <- 2050 #def = 2050

# Harvesting switch for timber production
# * 0 = No timber production from natveg, no age-class shifting
# * 1 = No timber production from natveg but with age-class shifting
# * 2 = Timber production from natveg including age-class shifting
cfg$gms$s35_hvarea <- 0 # def = 0

# Generic forest shock scenarios. Disturbance sets percentage of all age classes back to 0
# * ("none") No disturbance applied
# * ("002lin2030") Disturbance applied to 0p2 percent per year linear phase-in over 20yrs from 0 in 2030
# * ("004lin2030") Disturbance applied to 0p4 percent per year linear phase-in over 20yrs from 0 in 2030
# * ("008lin2030") Disturbance applied to 0p8 percent per year linear phase-in over 20yrs from 0 in 2030
# * ("016lin2030") Disturbance applied to 1p6 percent per year linear phase-in over 20yrs from 0 in 2030
cfg$gms$c35_shock_scenario = "none"     # def = "none"

# ***---------------------    36_employment    -------------------------------
# * This module calculates agricultural employment.
# * (exo_may22): employment is calculated based on labor costs and not affecting the
# * optimization
cfg$gms$employment <- "exo_may22"        # default = "exo_may22"

# * global minimum wage in USDMER05 per hour that needs to be reached in all countries by 2050
cfg$gms$s36_minimum_wage <- 0            # default = 0 (no minimum wage)

# * A scenario that increases wages can either be fully related to productivity increase
# * (leading to lower employment for the same total labor costs), or keep productivity
# * constant (leading to the same employment for higher total labor costs), or to a
# * mixture between productivity increase an total labor cost increase.
# * The scalar `s36_scale_productivity_with_wage` describes how high the labor productivity
# * gain should be relative to the increase in hourly labor costs. If set to 0,
# * productivity stays constant, if set to 1 productivity scales proportional to hourly
# * labor costs. Other positive values lead to a mixture of productivity gain and increase
# * in total costs.
cfg$gms$s36_scale_productivity_with_wage <- 0      # default = 0

# ***---------------------    37_labor_prod    ---------------------------------
# * This module provides a labour productivity factor (0-1),
# * which reflects the efficiency of labour under changing environmental conditions (1 = no change).
# * The labour productivity factor is currently only considered in the sticky_labor
# * realization of the [38_factor_costs] module.
# * (off): labor productivity factor fixed to 1
# * (exo): labor productivity factor is affected by climate change impacts
cfg$gms$labor_prod <- "off"         # default = off

# * Additional setting for exo realization only:
# * Climate change impact scenario. Options: "rcp119", "rcp585"
cfg$gms$c37_labor_rcp <- "rcp119"     # default = "rcp119"
# * Heat assessment metric. Options: "ISO", "HOTHAPS"
cfg$gms$c37_labor_metric <- "ISO"     # default = "ISO"
# * Labour intensity. Options: "300W", "400W"
cfg$gms$c37_labor_intensity <- "400W"   # default = "400W"
# * Uncertainty over ESMs. Options: "enslower", "ensmean", "ensupper"
cfg$gms$c37_labor_uncertainty <- "ensmean"  # default = "ensmean"

# ***---------------------    38_factor_costs    -------------------------------
# * Make sure you use the corresponding calibration file to the selected realization
# * Please, check details in input settings.
# * (per_ton_fao_may22)    factor costs fixed per ton
# * (sticky_feb18)         factor costs including investments in capital
# * (sticky_labor)         based on sticky_feb18 + labor productivity factor included
# NOTE: It is recommended to recalibrate the model when changing this setting!
# NOTE: In case the maximum number of iterations is reached without convergence
#       in the calibration, please consider to use the best_calib setting for the calibration run
cfg$gms$factor_costs <- "per_ton_fao_may22"        # default = per_ton_fao_may22

# * Regional (reg) or global (glo) factor requirements (applicable for per_ton_fao_may22,
# * sticky_feb18, sticky_labor). The regional version keeps factor requirements constant
# * after 2010, the global version uses values from 2005 for all years. Typically, the
# * same version (glo or reg) should be chosen for c70_fac_req_regr for consistency.
# NOTE: It is recommended to recalibrate the model when changing this setting!
cfg$gms$c38_fac_req <- "glo"        # default "glo"


# * Only relevant for sticky_labor implementation:

# * Year until which the capital share should be fixed to the historical values, not allowing for endogenous
# * substitution between labor and capital.
cfg$gms$s38_startyear_labor_substitution <- 2020    # default 2020

# * The following two settings are to create exogenous scenarios in which capital is substituted by labor to increase
# * employment:
# * The taget labor share defins a global target for labor share out of labor + capital needed per unit
# * of output. If 0, no target is set.
cfg$gms$s38_target_labor_share <- 0        # default 0

# * The target year defines the year for which the global target labor share should be set.
cfg$gms$s38_targetyear_labor_share <- 2050

# * The target fulfillment share indicates the share by which a region moves from its baseline
# * labor share towards the target value
cfg$gms$s38_target_fulfillment <- 0.5   # default 0.5

# ***---------------------    39_landconversion    -----------------------------
# * (calib):    Costs for cropland expansion are scaled with a regional calibration factor
# *       Costs for pasture and forestry expansion are global static
cfg$gms$landconversion <- "calib"           # def = calib
# * Cost for cropland expansion before calibration (USD05MER per hectare)
cfg$gms$s39_cost_establish_crop <- 10000    #def = 10000
# * Reward for cropland reduction before calibration (USD05MER per hectare)
cfg$gms$s39_reward_crop_reduction <- 6000
# * Cost for pasture land expansion (USD05MER per hectare)
cfg$gms$s39_cost_establish_past <- 8000     #def = 8000
# * Cost for foresty land expansion (USD05MER per hectare)
cfg$gms$s39_cost_establish_forestry <- 1000   #def = 1000
# * Cost for urban land expansion (USD05MER per hectare)
cfg$gms$s39_cost_establish_urban <- 10000     #def = 10000
# * Switch for ignoring land conversion cost calibration factors
# * Options: 1 (ignore calibration factors)
# *      0 (use calibration factors)
cfg$gms$s39_ignore_calib <- 0           #def = 0

# ***---------------------    40_transport    ----------------------------------
# * (off):        no transport costs
# * (gtap_nov12): transport costs applied to crops and ruminant livestock
# *               products calibrated based on magpie-output (dynamic pasture)
# *               to match GTAP data
cfg$gms$transport <- "gtap_nov12"                   # def = gtap_nov12

# * scalar to introduce pasture transport costs
cfg$gms$s40_pasture_transport_costs <- 0             # def = 0

# ***---------------------    41_area_equipped_for_irrigation    ---------------
# * (static):     no expansion
# * (endo_apr13): endogenous, cost driven expansion
cfg$gms$area_equipped_for_irrigation <- "endo_apr13"    # def = endo_apr13

# * switch for initialization area
# * (LUH2v2): area equipped for irrigation based on LUH2v2 irrigated areas
# * (Mehta2022): area equipped for irrigation from Mehta et al. (2022)
cfg$gms$c41_initial_irrigation_area  <- "LUH2v2"        # def = LUH2v2

# * Sets the rate of depreciation of irrigation infrastructure in every timestep.
# * Only applicable when (endo_apr13) realization is selected
cfg$gms$s41_AEI_depreciation <- 0                       # def = 0


# ***---------------------    42_water_demand   --------------------------------
# * (agr_sector_aug13): fixed fraction of water available is reserved
# *                     for other uses
# * (all_sectors_aug13): manufacturing, electricity and domestic demand are
# *                     retrieved from WATERGAP data.
cfg$gms$water_demand<- "all_sectors_aug13"            # def = all_sectors_aug13

# * water demand scenario
# *   options:   cc       (climate change)
# *             nocc      (no climate change)
# *             nocc_hist  (no climate change after year defined by sm_fix_cc)
cfg$gms$c42_watdem_scenario  <- "cc"   # def = "cc"

# * Choice of fraction of available water that is not
# * available for agriculture (only affects agr_sector_aug13 realization)
cfg$gms$s42_reserved_fraction <- 0.5         # def = 0.5

# * Scenario for non agricultural water demand from WATERGAP
# * (only affects all_sector_aug13 realization)
# * (1): ssp1
# * (2): ssp2
# * (3): ssp3
cfg$gms$s42_watdem_nonagr_scenario <- 2      # def = 2

# * Switch to determine the irrigation efficiency scenario
# * (1): global static value
# * (2): regional static values from gdp regression
# * (3): gdp driven increase
cfg$gms$s42_irrig_eff_scenario <- 2           # def = 2

# * Irrigation efficiency
# * (Only used if global static value is requested)
cfg$gms$s42_irrigation_efficiency <- 0.66       # def=0.66

# * Environmental flow protection policy
# * (off):   no EFP policy
# * (on):    global EFP policy
# * (mixed): EFP policy only in hic regions
cfg$gms$c42_env_flow_policy <- "off"             # def = "off"

# * Start and target year of environmental flow protection policy ('c42_env_flow_policy').
# * Defines when linear fading in of policy starts and when the target of
# * full protection based on 's42_env_flow_scenario' is reached
# * Start year:
cfg$gms$s42_efp_startyear <- 2020       # def = 2020
# * Target year (year when full protection is reached):
cfg$gms$s42_efp_targetyear <- 2040       # def = 2040

# * Switch and specification of countries for which environmental flow policy
# * shall apply.
# * Options: list of iso-codes of countries where EFP should be in effect.
# * Note: must be written in the format: "IND, BRA, DEU"
# * Default: all iso countries
cfg$gms$EFP_countries <- all_iso_countries # def = all_iso_countries

# * Environmental flow protection scenario
# * (0): do not consider environmental flows.
# *      s42_env_flow_base_fraction and
# *      s42_env_flow_fraction have no effect.
# * (1): Reserve a certain fraction of available water
# *      specified by s42_env_flow_fraction for
# *      environmental flows
# * (2): Each grid cell receives its own value for
# *      environmental flow protection based on LPJ
# *      results and a calculation algorithm by Smakhtin 2004.
# *      s42_env_flow_fraction has no effect.
cfg$gms$s42_env_flow_scenario <- 2             # def = 2

# * Fraction of available water that is reserved for the environment
# * in case of a protection policy
# * In which regions and timesteps a protection policy is in place is determined
# * in the file EFR_protection_policy.csv in the input folder
# * of the 42_water_demand module
cfg$gms$s42_env_flow_fraction <- 0.2           # def = 0.2

# * Fraction of available water that is reserved for the environment in case of
# * missing protection policy
cfg$gms$s42_env_flow_base_fraction <- 0.05      # def = 0.05

# * Switch to activate pumping costs (only available for India currently), Set to 1 if want to use for India
cfg$gms$s42_pumping <- 0      # def = 0

# * Year in which pumping costs will be implemented
cfg$gms$s42_multiplier_startyear <- 1995      # def = 1995

# * Scalar to change pumping costs for sensitivity analysis, takes numeric values
# * Default value is 0 for all regions, set value to 1 for India default analysis
# * Only applicable when s42_pumping is equal to 1
cfg$gms$s42_multiplier <- 0      # def = 0

# ***---------------------    43_water_availability   --------------------------
# * (total_water_aug13): surface and ground water resources available
cfg$gms$water_availability <- "total_water_aug13"    # def = total_water_aug13

# * water availability scenario
# *   options:   cc       (climate change)
# *             nocc      (no climate change)
# *             nocc_hist  (no climate change after year defined by sm_fix_cc)
cfg$gms$c43_watavail_scenario  <- "cc"   # def = "cc"

# ***-------------------------    44_biodiversity ------------------------------
# * (bii_target): Biodiversity Intactness Index (BII) for 71 biomes with the option to define a lower bound for BII at biome level
# * (bv_btc_mar21): Global optimization of range-rarity weighted biodiversity stocks based on a price for losses and gains
cfg$gms$biodiversity <- "bii_target"    # def = bii_target

# * Start year for linear increase towards BII target value (in bii_target) or biodiversity target price (in bv_btc_mar21)
cfg$gms$s44_start_year <- 2025    #def = 2025

# * Year in which the BII target value (in bii_target) or biodiversity target price (in bv_btc_mar21) is reached
cfg$gms$s44_target_year <- 2100   #def = 2100

# ** Options for realization `bii_target`
# * This realisation allows to define a target value and year for the Biodiversity Intactness Index (BII)
# * that is applied in each biome type of each biogeographic realm or at the global level.
# * The lower bound increases in each biome linearly from the BII level in the start year (s44_start_year) to the value defined in `s44_bii_lower_bound` in the target year (s44_target_year).
# * The BII has been proposed as a control variable for changes in ecosystem functioning at the global scale
# * and has shown to capture increasing levels of ecosystem degradation. Steffen et al. (2015, 10.1126/science.1259855) have proposed
# * a premliminary boundary of 0.9 at the biome level (safe space) but with an uncertainty range of 0.9-0.3,
# * in which ecosystem degradation may undermine stable ecosystem functioning and the supply of nature's
# * contributions to people (NCP). With BII values below 0.3, the area's biodiversity has been depleted,
# * causing high risk of ecosystem collapse. Estimates for the global BII range between 0.7975 in 1970 and 0.7754
# * in 2000. https://www.nhm.ac.uk/our-science/data/biodiversity-indicators/biodiversity-intactness-index-data
# * In MAgPIE, the global BII value is about 0.8 in 1995 and declines to 0.795 by 2020.

# * Lower bound for BII in target year; plausible range: 0-1
cfg$gms$s44_bii_lower_bound <- 0  #def = 0

# * Indicative outcomes for `s44_bii_lower_bound` based on c44_bii_decrease = 1, s44_start_year = 2025 and s44_target_year = 2100.
# *   < 0.7:  continued decrease of global BII
# *   0.74: no further decrease of global BII
# *   0.76: moderate increase of global BII
# *   >= 0.78: (very) strong increase of global BII accomplished by high conversion of pasture to non-forest natural land

# * BII lower bound implementation (binary)
# *   options:   0 (no decrease allowed) or 1 (decrease allowed)
# * 0 (no decrease allowed): If the biome-level BII in `s44_start_year` exceeds the lower bound defined in `s44_bii_lower_bound, the BII value in the start year is used as lower bound for BII in all future time steps.
# * 1 (decrease allowed): The lower bound for BII can decrease over time, depending on the biome-level BII in the start year and the lower bound defined in `s44_bii_lower_bound.
# * Note: The BII constraint is defined as a minimum constraint. Therefore, the actual BII can be higher than the lower bound.
cfg$gms$c44_bii_decrease <- 1   #def = 1


# ** Options for realization `bv_btc_mar21`

# * Price for biodiversity stock loss/gain in target year (USD per ha)
# * Plausible range: 0-10000
# * Indicative outcomes
# *   0: decrease of BII
# *   3000: rather constant BII
# *   6000: moderate increase of BII
# *   10000: stronger increase of BII
cfg$gms$s44_target_price <- 0 #def = 0

# * Price for biodiversity stock loss/gain in start year (USD per ha)
cfg$gms$s44_start_price <- 0  #def = 0


# ***-------------------------    45_climate   ---------------------------------
# * (static): static koeppengeiger climate classification data
cfg$gms$climate <- "static"    # def = static

# ***-------------------------    50_nr_soil_budget   --------------------------
# * (off):          off
# * (macceff_aug22): nr efficiency dependent on MACC curves
cfg$gms$nr_soil_budget <- "macceff_aug22"    # def = macceff_aug22

# * Scenario for baseline nr efficiency (excluding additional improvements based
# * on marginal abatmeent cost curves) on croplands for selected (and
# * respectively non-selected) countries in cropneff_countries and pastneff_countries
# *
# * Options:
# *   "constant",
# *     Scenarios keep baseline NUE constant.
# *   "baseeff_add3_add10_add20_max75", (SSP1)
# *   "baseeff_add3_add5_add10_max65", (SSP2)
# *   "baseeff_add3_add0_add0_max55", (SSP3)
# *   "baseeff_add3_add10_add15_max75", (SSP4)
# *   "baseeff_add3_add5_add15_max75", (SSP5)
# *   "baseeff_add3_add15_add25_max65", (lowTech)
# *   "baseeff_add3_add15_add25_max75", (MaxMitigation)
# *     In the baseeff_add scenarios, the baseline NUE starts from historical
# *     values in 2010. The three numbers signify how many percentage points
# *     the efficiency increases until 2020,2050 and 2100, always relative to
# *     2010. The max efficiency is the maximum base efficiency in 2050
# *     and 2100. "baseeff_add3_add15_add25_max65" means that China with a
# *     current NUE of 41 increases to 44% by 2010, 56% by 2050 and 65% by 2100,
# *     while the USA, with a current NUE of 71% has a falling base NUE to 65%
# *     by 2050 and 2100. These base NUEs can however be improved by the MACCs,
# *     leading to a max NUE of 85% for both China and USA in 2100.
# *     The recommmended mapping to storylines is shown above in brackets.
# *   "maxeff_add3_glo75_glo85", "maxeff_add3_glo75_glo80",
# *   "maxeff_add3_glo60_glo65", "maxeff_add3_glo65_glo75",
# *     Scenarios with a globaly uniform target NUE. This target NUE is achieved
# *     by the combination of full MACCs and baseline NUE. First number is the
# *     again additive efficiency increase until 2020, second number is
# *     max NUE in 2050, third in 2100. Example: maxeff_add3_glo75_glo85
# *     means efficiency increases a regional specific 3 percentag point
# *     improvement until 2020, and then it achieves a globally uniform 75%
# *     efficiency in y2050; the baseline NUE value is therefore about 63%,
# *     while the MACCs can increase this to 75%. In 2100, the baseline NUE
# *     increases to 74%, which can achieve 85% if combined with
# *     the MACCs.
# *   "maxeff_ZhangBy2030", "maxeff_ZhangBy2050"
# *     These two scenarios reach the max NUE of Zhang et al under application
# *     of the full MACCs by 2030 or 2050, and then rise a bit further to
# *     achieve a maximum NUE of 80% by 2100.

cfg$gms$c50_scen_neff <- "baseeff_add3_add5_add10_max65"   # def = baseeff_add3_add5_add10_max65
cfg$gms$c50_scen_neff_noselect <- "baseeff_add3_add5_add10_max65"   # def = baseeff_add3_add5_add10_max65

# * For pastures, only two scenarios exist: a constant scenario, and one where
# * the minimum NUE increases to 55,60 and 65% for 2020,2050 and 2100, to avoid
# * that pastures which do not have a nutrient deficit are fertilized
# * (historical NUE may be low despite no fertilization)
# * Options:
# * constant, constant_min55_min60_min65

cfg$gms$c50_scen_neff_pasture <- "constant_min55_min60_min65"       # def = constant_min55_min60_min65
cfg$gms$c50_scen_neff_pasture_noselect <- "constant_min55_min60_min65"      # def = constant_min55_min60_min65

# * Switch and specification of countries for which above defined (c50_scen_neff,
# * c50_scen_neff_pasture) apply, respectively.
# * For all other countries c50_scen_neff_noselect / c50_scen_neff_pasture_noselect
# * apply.
# * Options: list of iso-codes of countries where selected neff scenario should
# * be in effect.
# * Note: must be written in the format: "IND, BRA, DEU"
# * Default: above defined neff scenario applies to all iso countries
cfg$gms$cropneff_countries  <- all_iso_countries
cfg$gms$pastneff_countries  <- all_iso_countries


# ***---------------------    51_nitrogen   ------------------------------------
# * (rescaled_jan21): IPCC emissions factors rescaled with efficiency
# * (off):            no nitrogen calculations
cfg$gms$nitrogen    <- "rescaled_jan21"                 # def = rescaled_jan21


# ***---------------------    52_carbon   --------------------------------------
# * (normal_dec17): regrowth of carbon stocks in all c pools starts from pasture levels
# * (off):          carbon calculations deactivated
cfg$gms$carbon <- "normal_dec17"                       # def = normal_dec17

# * RCP scenario of land carbon sink adjustment factor, from Grassi et al 2021
# *   options:  RCP19, RCP26, RCP34, RCP45, RCP60, RCPBU,
# *             nocc  (fixed to values from 1995),
# *             nocc_hist (RCPBU until year defined in sm_fix_cc, fixed thereafter)
cfg$gms$c52_land_carbon_sink_rcp  <- "RCPBU"


# * carbon scenario
# *   options:   cc        (climate change)
# *             nocc       (no climate change)
# *             nocc_hist  (no climate change after year defined by sm_fix_cc)
cfg$gms$c52_carbon_scenario  <- "cc"   # def = "cc"

# * Minimum threshold of carbon density (tC/ha) in timber plantations
cfg$gms$s52_plantation_threshold <- 8   # def = 8

# ***---------------------    53_methane   -------------------------------------
# * (ipcc2006_aug22): IPCC 2006 methodology
# * (off):                    methane calculations deactivated
cfg$gms$methane  <- "ipcc2006_aug22"    # def = ipcc2006_aug22

# ***---------------------    54_phosphorus   ----------------------------------
# * (off): calculations deactivated
cfg$gms$phosphorus  <- "off"                     # def = off

# ***---------------------    55_awms   ---------------------------------------
# * (ipcc2006_aug16): animal waste management systems
# *                   (based on IPCC 2006 Guidelines)
# * (off):            deactivated animal waste management
cfg$gms$awms  <- "ipcc2006_aug16"                     # def = ipcc2006_aug16

# * scenario for animal waste management.
# * option: "ssp1", "ssp2", "ssp3", "ssp4", "ssp5", "constant", "a1", "a2", "b1","b2",
#*          "GoodPractice"
# * Note: c55_scen_conf applies to countries selected in scen_countries55
# * c55_scen_conf_noselect applies to all other countries.
# * Available scenarios for c55_scen_conf_noselect are identical to c55_scen_conf
cfg$gms$c55_scen_conf <- "ssp2"    # def = ssp2
cfg$gms$c55_scen_conf_noselect <- "ssp2"    # def = ssp2

# * Switch and specification of countries for which awm scenario in
# * c55_scen_conf applies.
# * Options: list of iso-codes of countries where awm scneario should be applied
# * Note: must be written in the format: "IND, BRA, DEU"
# * Default: all iso countries
cfg$gms$scen_countries55  <- all_iso_countries

# ***---------------------    56_ghg_policy   ----------------------------------
# * (price_aug22): applies pollutant prices to different emission types and calculates the reward for CDR from afforestation
cfg$gms$ghg_policy  <- "price_aug22"                     # def = price_aug22

# * Switch for scaling GHG price with development state (1=on 0=off)
cfg$gms$s56_ghgprice_devstate_scaling <- 0    # def = 0

# * reduction factor for CO2 price (only used in price_jan19)
# * lowers the economic incentive for CO2 emission reduction (avoided deforestation) and afforestation
cfg$gms$s56_cprice_red_factor <- 1    # def = 1

# * GHG emission price scenario
# * Note: For best consistency it is recommended to use trajectories from the most recent
# *     coupled REMIND-MAgPIE runs. Currently, this is R32M46.
# * Available options:
# *     none: no 2nd generation bioenergy demand
# * R32M46: Coupled REMIND-MAgPIE runs with REMIND 3.2.1.dev412 and MAgPIE 4.6.11
# *   NPi: Current policies; limit peak warming to 3.0°C
# *   NDC: Nationally determined contributions; limit peak warming to 2.5°C
# *   PkBudg650:  Peak Budget with 650 GtCO2 until net-zero CO2 emissions; well-below 1.5°C in 2100
# *   PkBudg1050: Peak Budget with 1050 GtCO2 until net-zero CO2 emissions; well-below 2.0°C in 2100
# *     R32M46-SDP_MC-NPi,  R32M46-SDP_MC-NDC, R32M46-SDP_MC-PkBudg650,
# *     R32M46-SSP1-NPi, R32M46-SSP1-NDC, R32M46-SSP1-PkBudg1050, R32M46-SSP1-PkBudg650,
# *     R32M46-SSP2EU-NPi, R32M46-SSP2EU-NDC, R32M46-SSP2EU-PkBudg1050, R32M46-SSP2EU-PkBudg650,
# *     R32M46-SSP5-NPi, R32M46-SSP5-NDC, R32M46-SSP5-PkBudg1050, R32M46-SSP5-PkBudg650,
# * R21M42: Coupled REMIND-MAgPIE runs with REMIND 2.1 and MAgPIE 4.2
# *   NPi: Current policies; above 3.0°C in 2100
# *   NDC: Nationally determined contributions; limit peak warming to 2.5°C
# *   PkBudg900:  Budget with 900 GtCO2; well-below 1.5°C in 2100 (PkBudg1000 for SDP)
# *   PkBudg1300: Budget with 1300 GtCO2; well-below 2.0°C in 2100
# *     R21M42-SDP-NPi, R21M42-SDP-NDC, R21M42-SDP-PkBudg1000, R21M42-SDP-PkBudg1100, R21M42-SDP-PkBudg900,
# *     R21M42-SSP1-NPi, R21M42-SSP1-NDC, R21M42-SSP1-PkBudg1100, R21M42-SSP1-PkBudg1300, R21M42-SSP1-PkBudg900,
# *     R21M42-SSP2-NPi, R21M42-SSP2-NDC, R21M42-SSP2-PkBudg1100, R21M42-SSP2-PkBudg1300, R21M42-SSP2-PkBudg900,
# *     R21M42-SSP5-NPi, R21M42-SSP5-NDC, R21M42-SSP5-PkBudg1100, R21M42-SSP5-PkBudg1300, R21M42-SSP5-PkBudg900,
# * R2M41: Coupled REMIND-MAgPIE runs with REMIND 2.0 and MAgPIE 4.1
# *     R2M41-SSP2-NPi, R2M41-SSP2-NDC, R2M41-SSP2-Budg1300, R2M41-SSP2-Budg600, R2M41-SSP2-Budg950
# * Standalone REMIND runs from Strefler et al 2021; well-below 2.0°C in 2100
# *   https://www.nature.com/articles/s41467-021-22211-2
# *   PIK_GDP, PIK_H2C, PIK_HBL, PIK_HOS, PIK_LIN, PIK_NPI, PIK_OPT
# * SSP Database 2018, various SSP, RCP and Model combinations
# *   https://tntcat.iiasa.ac.at/SspDb
# *   Caution: using trajectories from other models or older MAgPIE versions might be
# *   inconsistent with the current MAgPIE version.
# *     SSPDB-SSP1-20-IMAGE,SSPDB-SSP1-20-REMIND-MAGPIE,
# *     SSPDB-SSP1-26-IMAGE,SSPDB-SSP1-26-REMIND-MAGPIE,
# *     SSPDB-SSP1-34-IMAGE,SSPDB-SSP1-34-REMIND-MAGPIE,
# *     SSPDB-SSP1-37-REMIND-MAGPIE,
# *     SSPDB-SSP1-45-IMAGE,SSPDB-SSP1-45-REMIND-MAGPIE,
# *     SSPDB-SSP1-Ref-IMAGE,SSPDB-SSP1-Ref-REMIND-MAGPIE,
# *     SSPDB-SSP2-18-MESSAGE-GLOBIOM,SSPDB-SSP2-19-MESSAGE-GLOBIOM,
# *     SSPDB-SSP2-20-MESSAGE-GLOBIOM,SSPDB-SSP2-20-REMIND-MAGPIE,
# *     SSPDB-SSP2-26-MESSAGE-GLOBIOM,SSPDB-SSP2-26-REMIND-MAGPIE,
# *     SSPDB-SSP2-34-MESSAGE-GLOBIOM,SSPDB-SSP2-34-REMIND-MAGPIE,
# *     SSPDB-SSP2-37-REMIND-MAGPIE,
# *     SSPDB-SSP2-45-MESSAGE-GLOBIOM,SSPDB-SSP2-45-REMIND-MAGPIE,
# *     SSPDB-SSP2-60-MESSAGE-GLOBIOM,SSPDB-SSP2-60-REMIND-MAGPIE,
# *     SSPDB-SSP2-Ref-MESSAGE-GLOBIOM,SSPDB-SSP2-Ref-REMIND-MAGPIE,
# *     SSPDB-SSP3-34-AIM-CGE,SSPDB-SSP3-45-AIM-CGE,
# *     SSPDB-SSP3-60-AIM-CGE,SSPDB-SSP4-26-GCAM4,
# *     SSPDB-SSP4-34-GCAM4,SSPDB-SSP4-45-GCAM4,
# *     SSPDB-SSP4-60-GCAM4,SSPDB-SSP4-Ref-GCAM4,
# *     SSPDB-SSP5-20-REMIND-MAGPIE,SSPDB-SSP5-26-REMIND-MAGPIE,
# *     SSPDB-SSP5-34-REMIND-MAGPIE,SSPDB-SSP5-37-REMIND-MAGPIE,
# *     SSPDB-SSP5-45-REMIND-MAGPIE,SSPDB-SSP5-60-REMIND-MAGPIE,
# *     SSPDB-SSP5-Ref-REMIND-MAGPIE,
# * Used for producing coupled runs with REMIND-MAgPIE or for exogenous input (see below)
# *     coupling
# * Note: c56_pollutant_prices applies to countries selected in policy_countries56
# * c56_pollutant_prices_noselect applies to all other countries.
# * Available scenarios for c56_pollutant_prices_noselect are identical to c56_pollutant_prices
# * (see above) except for emulator and coupling (which can only be chosen for c56_pollutant_prices)
cfg$gms$c56_pollutant_prices <- "R32M46-SSP2EU-NPi"     # def = R32M46-SSP2EU-NPi
cfg$gms$c56_pollutant_prices_noselect <- "R32M46-SSP2EU-NPi"     # def = R32M46-SSP2EU-NPi

# * The following two settings can be used to provide exogenous ghg prices
# * via a file that is not part of the input data. This is currently used
# * in the REMIND-MAgPIE coupling to read in the REMIND data.
# * Takes effect only if cfg$gms$c56_pollutant_prices is set to "coupling"

# * Use ghg prices from the mif file specified here
cfg$path_to_report_ghgprices <- NA

# * Mute GHG prices until (and including) the year given here
# * Note: minimum C price (see below) will be set regardless of this setting
cfg$gms$c56_mute_ghgprices_until <- "y2030"   # def = y2030

# * Minium C price (USD per tC) for future time steps until (and including) the year defined in `c56_mute_ghgprices_until`
# * Note: in case of NDC policy a C price of 18 USD per tC (5 USD per tCO2) is used to guide land-use decisions (set via scenario_config.csv)
cfg$gms$s56_minimum_cprice <- 0    # def = 0

# * Switch and specification of countries for which pollutant pricing in
# * c56_pollutant_prices applies.
# * Options: list of iso-codes of countries where ghg policy should be applied
# * Note: must be written in the format: "IND, BRA, DEU"
# * Default: all iso countries
# * Note: Only for exogenous scenarios. Does not take any effect when "coupling" /
# * "emulator" is selected above.
cfg$gms$policy_countries56  <- all_iso_countries   # def = all_iso_countries

# * Switch for C price driven afforestation (1=on 0=off)
cfg$gms$s56_c_price_induced_aff <- 1   # def = on

# * C price used as incentive for afforestation
# * Note: This setting should only be changed by experienced users
# * Options: forestry_vegc, primforest_vegc, secdforest_vegc
# * This setting interacts with `c56_emis_policy`.
# * If "forestry" is not included in `c56_emis_policy` (e.g. reddnatveg_nosoil), there will be no C-price driven afforestation unless `c56_cprice_aff` is changed to primforest_vegc or secdforest_vegc.
cfg$gms$c56_cprice_aff <- "secdforest_vegc"   # def = secdforest_vegc

# * C price expectation for afforestation decision-making in years
# * 0 is myopic behaviour (only C price of current time step)
# * reflects perfect-foresight if equal to s32_planing_horizon
# * should not be higher than s32_planing_horizon
cfg$gms$s56_c_price_exp_aff <- 50   # def = 50

# * Share of carbon credits for re/afforestation projects set aside in a buffer to
# * account for potential failure of permanent carbon storage.
# * Alternatively, this parameter can be interpreted as a reduction factor
# * of the carbon price for non-permanent CDR.
# * Values > 0 will reduce the incentive for c-price-induced re/afforestation
cfg$gms$s56_buffer_aff <- 0.5   # def = 0.5

# * Upper limit for CH4 and N2O GHG price (USD05MER per tC)
# * Limits GHG prices selected in c56_pollutant_prices to the chosen value.
# * CH4 and N2O GHG prices are limited by default to 4000 USD05MER per tC equivalent,
# * which induces the maximum abatement possible with c57_macc_version = "PBL_2022"
# * Beyond 4000 USD05MER per tC equivalent no further technical mitigation is possible
# * but would increase agricultural prices.
# * Suggested limits for different c57_macc_version settings
# * PBL_2007: 1000 (200 steps, 5 USD each)
# * PBL_2019: 4000 (200 steps, 20 USD each)
# * PBL_2022: 4000 (200 steps, 20 USD each)
cfg$gms$s56_limit_ch4_n2o_price <- 4000   # def = 4000

# * NOTE: The following 2 options for emission pricing have strong interactions in runs with CO2 prices and should only be changed by experienced users.
# *     The main purpose of these options is to regulate the pricing of positive emissions. Note that re/afforestation is covered by a separate mechanism.

# * GHG emission pricing policies
# * options:
# * none (not including any GHG sources),
# * redd_nosoil (Above ground CO2 emis from LUC in forest; all CH4 and N2O emissions),
# * redd_nosoil_nopeat (same as redd_nosoil but without GHG emissions from peatlands),
# * reddnatveg_nosoil (Above ground CO2 emis from LUC in forest and natveg; all CH4 and N2O emissions),
# * reddnatveg_nosoil_nopeat (same as reddnatveg_nosoil but without GHG emissions from peatlands),
# * redd+_nosoil (Above ground CO2 emis from LUC in forest and forestry; all CH4 and N2O emissions),
# * redd+_nosoil_nopeat (same as redd+_nosoil but without GHG emissions from peatlands),
# * redd+natveg_nosoil (Above ground CO2 emis from LUC in forest, forestry and natveg; all CH4 and N2O emissions),
# * redd+natveg_nosoil_nopeat (same as redd+natveg_nosoil but without GHG emissions from peatlands),
# * all (CO2 emis from LUC in all LUs; all CH4 and N2O emissions), all_nosoil (Above ground CO2 emis from LUC for all LUs; all CH4 and N2O emissions)
# * all_nosoil: Above ground CO2 emis from LUC for all LUs; all CH4 and N2O emissions
# * sdp_cropeff (only ch4 from rice), sdp_livestock (only ch4 and n2o from livestock), sdp_peatland (co2, ch4 and n2o from peatland),
# * sdp_redd (only co2 from vegc), sdp_soil (only co2 from litc and soilc), sdp_redd_soil (only co2 from vegc, litc, soilc),
# * sdp_redd_soil_peat (only co2 from vegc, litc, soilc and co2, ch4 and n2o from peatland), sdp_all (all individual sdp scenarios combined)
# * gcs_lbs (land-based mitigation: above-ground CO2 emis from LUC in forest, forestry and natveg; co2, ch4 and n2o from peatland),
# * gcs_res (mitigation in production systems: all agricultural non-CO2 emissions)
# * ecoSysProtAll:               (Above ground CO2 emis from LUC in forest, forestry, natveg; All types of emis from peatland; All CH4 and N2O emis),
# * ecoSysProtForest:            (Above ground CO2 emis from LUC in forest, forestry; All CH4 and N2O emis except peatland),
# * ecoSysProtPrimForest:        (Above ground CO2 emis from LUC in primary forest; All CH4 and N2O emis except peatland),
# * ecoSysProtOff:               (All CH4 and N2O emis except peatland),
# * ecoSysProtAll_agMgmtExclN2O: (Above ground CO2 emis from LUC in forest, forestry, natveg; All types of emis from peatland; All CH4 emis, no further N2O emis)
# * ecoSysProtAll_agMgmtExclCH4: (Above ground CO2 emis from LUC in forest, forestry, natveg; All types of emis from peatland; All N2O emis, no further CH4 emis)
# * ecoSysProtAll_agMgmtOff:     (Above ground CO2 emis from LUC in forest, forestry, natveg; All types of emis from peatland; No further CH4/N2O/other emis related to ag. management)
cfg$gms$c56_emis_policy <- "reddnatveg_nosoil"     # def = reddnatveg_nosoil

# * CO2 emissions subject to carbon pricing
# * options:  actual, actualNoAcEst
# *   actual: CO2 emissions for pricing are based on the difference of actual carbon stocks between time steps
# *   actualNoAcEst: CO2 emissions for pricing are based on actual carbon stocks but
# *     without newly established forest and non-forest areas. Note that re/afforestation is covered by a separate mechanism.
c56_carbon_stock_pricing <- "actualNoAcEst"   # def = actualNoAcEst


# ***---------------------    57_maccs   ---------------------------------------
# * (on_aug22):  maccs for non-CO2 emission mitigation activated
cfg$gms$maccs  <- "on_aug22"                     # def = on_aug22

# * Version of MACCs
# * options: PBL_2007, PBL_2019, PBL_2022
cfg$gms$c57_macc_version  <- "PBL_2022"                # def = PBL_2022

# * MACC scenario (only for PBL_2022)
# * options: Default, Optimistic, Pessimistic
cfg$gms$c57_macc_scenario  <- "Default"          # def = Default

# * Exogenous forced mitigation, independent of pollutant prices
# * Overwrites signal of mitigation price by choosing maximum mitigation levels
# * This avoids that emission tax is rolled over to food prices, only the
# * the mitigaton costs are rolled over to prices.
# * options: -1, 1 to 201 for each MACC mitigation step
# * -1: pollutant-price driven maccs
# * 0: inactive MACCs (price level zero)
# * 201: maximum level of mitigation
cfg$gms$s57_maxmac_n_soil  <- -1   # def = -1
cfg$gms$s57_maxmac_n_awms  <- -1   # def = -1
cfg$gms$s57_maxmac_ch4_rice   <- -1   # def = -1
cfg$gms$s57_maxmac_ch4_entferm <- -1   # def = -1
cfg$gms$s57_maxmac_ch4_awms  <- -1   # def = -1

# ***---------------------    58_peatland   ------------------------------------
# * (off):  Peatland area and associated GHG emissions are assumed zero
# * (v2):   Peatland area is initialized with degraded and intact peatland area for the year 2022,
# *         and projected into the future based on changes in managed land.
# *         For boreal and tropical climates, GHG emissions are calculated using emission
# *         factors from the IPCC 2013 Wetland supplement. For temperate climates, more recent
# *         estimates from Tiemeyer et al 2020 are used.
cfg$gms$peatland  <- "v2"                     # def = v2

# * peatland rewetting
# *   options:   0  (off)
# *             Inf (on)
cfg$gms$s58_rewetting_switch  <- Inf   # def = Inf

# * One-time and recurring costs for peatland rewetting (USD05MER per ha)
cfg$gms$s58_cost_rewet_onetime  <- 7000   # def = 7000
cfg$gms$s58_cost_rewet_recur  <- 200   # def = 200

# * One-time and recurring costs for peatland drainage (USD05MER per ha)
# * One-time costs apply on the drainage of intact and rewetted peatland
# * Recurring costs apply on the level of drained and managed peatland
cfg$gms$s58_cost_drain_intact_onetime  <- 0   # def = 0
cfg$gms$s58_cost_drain_rewet_onetime  <- 0   # def = 0
cfg$gms$s58_cost_drain_recur  <- 0   # def = 0


# * Switch for fixing peatland area until the year given by s58_fix_peatland to historic levels (not available in `off`).
# * Note: In the realisation `v2`, historic peatland area is only available for the year 2022.
# *     Due to the 5-year time step limitation in MAgPIE, the suggested default is 2020.
# *     Fixing  peatland area in previous time steps provides a better
# *     proxy for GHG emissions from peatlands than assuming no peatland area.
cfg$gms$s58_fix_peatland  <- 2020   # def = 2020

# ***-------------------------    59_som   -------------------------------------
# * (static_jan19): static soil carbon loss for cropland
# * (cellpool_aug16): dynamic soil organic matter pool on cellular level
# * (cellpool_jan23): dynamic soil organic matter pool on cellular level
# *                   with updated, regionalized stock change factors (IPCC guidelines 2019)
cfg$gms$som <- "static_jan19"    # def = static_jan19

# * static realization switch
# *   options:   cellular  (use preprocessed cellular stock change factors)
# *              cluster   (use cshare_released on cluster within gams)
cfg$gms$c59_static_spatial_level <-  "cellular"

# * cellpool realization switches

# * som climate impact scenario
# *   options:   cc        (climate change)
# *             nocc       (no climate change)
# *             nocc_hist  (no climate change after year defined by sm_fix_cc)
cfg$gms$c59_som_scenario  <- "cc"   # def = "cc"

# * irrigation feedback
# *   options:   on  (higher carbon sequestration under irrigation)
# *              off (no carbon sequestration under irrigation)
cfg$gms$c59_irrigation_scenario   <- "on"    # def = "on"

# * Exogenous nr release through som loss (only in static realization)
# *   options:   constant  (constant from 2020)
# *              fadeout_2050  (fading out till 2050)
cfg$gms$c59_exo_scen <- "constant"

# ***---------------------    60_bioenergy   -----------------------------------
# * (1stgen_priced_dec18):    exogenous and price-based 1st generation bioenergy
# *                           demand, 2nd generation residues exogeneous,
# *                           2nd generation betr and begr coupled with REMIND.
cfg$gms$bioenergy <- "1stgen_priced_dec18"     # def = 1stgen_priced_dec18

# * 1st generation bioenergy demand scenarios based on Lotze Campen (2014)
# * (phaseout2020): increase until 2020, followed by phaseout until 2050
# * (const2020): increase until 2020, constant thereafter
# * (const2030): increase until 2030, constant thereafter
cfg$gms$c60_1stgen_biodem <- "const2020"               # def = const2020

# * 2nd generation bioenergy demand scenario
# * Note: For best consistency it is recommended to use trajectories from the most recent
# *     coupled REMIND-MAgPIE runs. Currently, this is R32M46.
# * Available options:
# *     none: no 2nd generation bioenergy demand
# * R32M46: Coupled REMIND-MAgPIE runs with REMIND 3.2.1.dev412 and MAgPIE 4.6.11
# *   NPi: Current policies; limit peak warming to 3.0°C
# *   NDC: Nationally determined contributions; limit peak warming to 2.5°C
# *   PkBudg650:  Peak Budget with 650 GtCO2 until net-zero CO2 emissions; well-below 1.5°C in 2100
# *   PkBudg1050: Peak Budget with 1050 GtCO2 until net-zero CO2 emissions; well-below 2.0°C in 2100
# *     R32M46-SDP_MC-NPi,  R32M46-SDP_MC-NDC, R32M46-SDP_MC-PkBudg650,
# *     R32M46-SSP1-NPi, R32M46-SSP1-NDC, R32M46-SSP1-PkBudg1050, R32M46-SSP1-PkBudg650,
# *     R32M46-SSP2EU-NPi, R32M46-SSP2EU-NDC, R32M46-SSP2EU-PkBudg1050, R32M46-SSP2EU-PkBudg650,
# *     R32M46-SSP5-NPi, R32M46-SSP5-NDC, R32M46-SSP5-PkBudg1050, R32M46-SSP5-PkBudg650,
# * R21M42: Coupled REMIND-MAgPIE runs with REMIND 2.1 and MAgPIE 4.2
# *   NPi: Current policies; above 3.0°C in 2100
# *   NDC: Nationally determined contributions; limit peak warming to 2.5°C
# *   PkBudg900:  Budget with 900 GtCO2; well-below 1.5°C in 2100 (PkBudg1000 for SDP)
# *   PkBudg1300: Budget with 1300 GtCO2; well-below 2.0°C in 2100
# *     R21M42-SDP-NPi, R21M42-SDP-NDC, R21M42-SDP-PkBudg1000, R21M42-SDP-PkBudg1100, R21M42-SDP-PkBudg900,
# *     R21M42-SSP1-NPi, R21M42-SSP1-NDC, R21M42-SSP1-PkBudg1100, R21M42-SSP1-PkBudg1300, R21M42-SSP1-PkBudg900,
# *     R21M42-SSP2-NPi, R21M42-SSP2-NDC, R21M42-SSP2-PkBudg1100, R21M42-SSP2-PkBudg1300, R21M42-SSP2-PkBudg900,
# *     R21M42-SSP5-NPi, R21M42-SSP5-NDC, R21M42-SSP5-PkBudg1100, R21M42-SSP5-PkBudg1300, R21M42-SSP5-PkBudg900,
# * R2M41: Coupled REMIND-MAgPIE runs with REMIND 2.0 and MAgPIE 4.1
# *     R2M41-SSP2-NPi, R2M41-SSP2-NDC, R2M41-SSP2-Budg1300, R2M41-SSP2-Budg600, R2M41-SSP2-Budg950
# * Standalone REMIND runs from Strefler et al 2021; well-below 2.0°C in 2100
# *   https://www.nature.com/articles/s41467-021-22211-2
# *   PIK_GDP, PIK_H2C, PIK_HBL, PIK_HOS, PIK_LIN, PIK_NPI, PIK_OPT
# * SSP Database 2018, various SSP, RCP and Model combinations
# *   https://tntcat.iiasa.ac.at/SspDb
# *   Caution: using trajectories from other models or older MAgPIE versions might be
# *   inconsistent with the current MAgPIE version.
# *     SSPDB-SSP1-20-IMAGE,SSPDB-SSP1-20-REMIND-MAGPIE,
# *     SSPDB-SSP1-26-IMAGE,SSPDB-SSP1-26-REMIND-MAGPIE,
# *     SSPDB-SSP1-34-IMAGE,SSPDB-SSP1-34-REMIND-MAGPIE,
# *     SSPDB-SSP1-37-REMIND-MAGPIE,
# *     SSPDB-SSP1-45-IMAGE,SSPDB-SSP1-45-REMIND-MAGPIE,
# *     SSPDB-SSP1-Ref-IMAGE,SSPDB-SSP1-Ref-REMIND-MAGPIE,
# *     SSPDB-SSP2-18-MESSAGE-GLOBIOM,SSPDB-SSP2-19-MESSAGE-GLOBIOM,
# *     SSPDB-SSP2-20-MESSAGE-GLOBIOM,SSPDB-SSP2-20-REMIND-MAGPIE,
# *     SSPDB-SSP2-26-MESSAGE-GLOBIOM,SSPDB-SSP2-26-REMIND-MAGPIE,
# *     SSPDB-SSP2-34-MESSAGE-GLOBIOM,SSPDB-SSP2-34-REMIND-MAGPIE,
# *     SSPDB-SSP2-37-REMIND-MAGPIE,
# *     SSPDB-SSP2-45-MESSAGE-GLOBIOM,SSPDB-SSP2-45-REMIND-MAGPIE,
# *     SSPDB-SSP2-60-MESSAGE-GLOBIOM,SSPDB-SSP2-60-REMIND-MAGPIE,
# *     SSPDB-SSP2-Ref-MESSAGE-GLOBIOM,SSPDB-SSP2-Ref-REMIND-MAGPIE,
# *     SSPDB-SSP3-34-AIM-CGE,SSPDB-SSP3-45-AIM-CGE,
# *     SSPDB-SSP3-60-AIM-CGE,SSPDB-SSP4-26-GCAM4,
# *     SSPDB-SSP4-34-GCAM4,SSPDB-SSP4-45-GCAM4,
# *     SSPDB-SSP4-60-GCAM4,SSPDB-SSP4-Ref-GCAM4,
# *     SSPDB-SSP5-20-REMIND-MAGPIE,SSPDB-SSP5-26-REMIND-MAGPIE,
# *     SSPDB-SSP5-34-REMIND-MAGPIE,SSPDB-SSP5-37-REMIND-MAGPIE,
# *     SSPDB-SSP5-45-REMIND-MAGPIE,SSPDB-SSP5-60-REMIND-MAGPIE,
# *     SSPDB-SSP5-Ref-REMIND-MAGPIE,
# * Used for producing coupled runs with REMIND-MAgPIE or for exogenous input (see below)
# *     coupling
# * Note: c60_2ndgen_biodem applies to countries selected in scen_countries60
# * c60_2ndgen_biodem_noselect applies to all other countries.
cfg$gms$c60_2ndgen_biodem <- "R32M46-SSP2EU-NPi"     # def = R32M46-SSP2EU-NPi
cfg$gms$c60_2ndgen_biodem_noselect <- "R32M46-SSP2EU-NPi"     # def = R32M46-SSP2EU-NPi

# * The following setting can be used to provide exogenous bioenergy demand
# * via a .mif file that is not part of the input data. This is currently used
# * in the REMIND-MAgPIE coupling to read in the REMIND data.
# * Takes effect only if cfg$gms$c60_2ndgen_biodem is set to "coupling"
cfg$path_to_report_bioenergy <- NA

# * Switch and specification of countries for which 2nd gen bioenergy demand
# * scenario applies.
# * Options: list of iso-codes of countries where scenario should be applied
# * Note: must be written in the format: "IND, BRA, DEU"
# * Default: all iso countries
# * Note: Only for exogenous scenarios. Does not take any effect when "coupling" /
# * "emulator" selected.
cfg$gms$scen_countries60  <- all_iso_countries

# * residue demand for 2nd generation bioenergy scenarios
# * options:    ssp1, ssp2, ssp3, ssp4, ssp5, off
cfg$gms$c60_res_2ndgenBE_dem <- "ssp2"     # def = ssp2

# * bioenergy demand level
# * (1): regional
# * (0): global
cfg$gms$c60_biodem_level <- 1                     # def = 1

# * Minimum dedicated 2nd generation bioenergy demand assumed in each region (mio. GJ per yr)
# * Without a minimum demand, there is the risk that some regions won't have a price for 2nd generation bioenergy.
# * Therefore, the minimum demand is of particular importance for the coupling with REMIND.
cfg$gms$s60_2ndgen_bioenergy_dem_min <- 1       # def = 1

# * first generation bioenergy subsidy (USD05MER per ton)
cfg$gms$c60_bioenergy_subsidy <- 300              # def = 300


# ***---------------------    62_material   ------------------------------------
# * (exo_flexreg_apr16): default
cfg$gms$material <- "exo_flexreg_apr16"

# * Biomass demand for bioplastics is based on a logistic curve projecting
# * bioplastic demand, which matches the historic demand in 2020, and is
# * defined by the maximum demand for bioplastics s62_max_dem_bioplastics
# * (in mio. tonnes) and the midpoint s62_midpoint_dem_bioplastics (i.e.
# * where bioplastic demand is half of the maximum demand).
# * If maximum demand is 0, biomass demand for bioplastic production is not included.
# * Projected total plastic use in the "Global Ambiton" scneario of the OECD is
# * about 600 mio. tonnes in 2050 -> E.g. 200 mio. tonnes in 2050 could be a
# * reasonable (but ambitious) bioplastic scenario. With midpoint 2050 this
# * would mean s62_max_dem_bioplastic = 400.
cfg$gms$s62_max_dem_bioplastic      <- 0                 # def = 0
cfg$gms$s62_midpoint_dem_bioplastic <- 2050              # def = 2050

# ***---------------------    70_livestock   -----------------------------------
# * (fbask_jan16): default feed basket realization
cfg$gms$livestock <- "fbask_jan16"                  # def = fbask_jan16

# * Year until the pasture management factor is fixed to 1
cfg$gms$s70_past_mngmnt_factor_fix <- "2005"  # def = 2005

# * feed scenario
# *   options:   SSP: ssp1, ssp2, ssp3, ssp4, ssp5
# *              SDP: SDP, SDP_EI, SDP_MC, SDP_RC
# *              other: constant
cfg$gms$c70_feed_scen <- "ssp2"                     # def = ssp2

# * Feed substitution scenarios.
# * options consist of 3 parts: functional form (lin,sigmoid), target (zero, 20pc, 50pc, 80pc, 90pc) and transition period (10_50: from 2010 to 2050, 20_50: from 2020 to 2050)
# * Example for sigmoid_50pc_20_50:
# *   Functional form: sigmoid (S-shaped)
# *   Target: 50percent reduction at end of transition period (2050 in this case)
# *   Transition period: start in 2020, end in 2050
# *   options:   constant,
# *              lin_zero_10_50, lin_zero_20_50, lin_zero_20_30, lin_zero_20_70, lin_50pc_20_50, lin_50pc_20_50_extend65, lin_50pc_20_50_extend80,
# *              lin_50pc_10_50_extend90, lin_75pc_10_50_extend90, lin_80pc_20_50, lin_80pc_20_50_extend95, lin_90pc_20_50_extend95,
# *              lin_99-98-90pc_20_50-60-100, sigmoid_20pc_20_50, sigmoid_50pc_20_50, sigmoid_80pc_20_50
# * Cereal feed substituted by SCP
cfg$gms$c70_cereal_scp_scen <- "constant"                         # def = constant
# * Fodder feed substituted by SCP
cfg$gms$c70_foddr_scp_scen <- "constant"                        # def = constant

# * Regional (reg) or global (glo) regression for livestock factor requirements.
# * Typically, the same version (glo or reg) should be chosen for c38_fac_req
# * for consistency.
cfg$gms$c70_fac_req_regr <- "glo"                               # def = glo

# ***---------------------    71_disagg_lvst   -----------------------------------
# * (off):               default
# * (foragebased_aug18): Disaggregation of livestock to cells
# *                      with high pasture and fodder availability
# * (foragebased_jul23): Disaggregation of livestock to cells
# *                      with high pasture and fodder availability
# *                      (improved and flexibitized)
cfg$gms$disagg_lvst <- "foragebased_jul23"                  # def = foragebased_jul23


# ***---------------------    73_timber   -----------------------------------
# * (default): Demand and production of timber products
cfg$gms$timber <- "default"                  # def = default

# Logical switch to turn on or off timber demand (wood and woodfuel).
# Note that "on" requires dynamic timber plantations (s32_hvarea=2 and s35_hvarea=2)
# for actual results.
# Vice-versa, in the "off" case, timber plantations should be static (s32_hvarea=0/1 and s35_hvarea=0/1)
# for a simplified representation of land demand for timber production from plantations
# (implicitly assuming the same rate for plantation harvest and establishment).
# * 1=on
# * 0=off
cfg$gms$s73_timber_demand_switch         <- 0     # def = 0

# Setting to define if the model should be forward looking or not in terms of
# seeing the future demand for current timestep establishment of new plantations
# in the forward setting, the model sees only current demand for establishment
# decisions in the historical time period but then sees future demand for non
# historic time periods. In myopic setting, the model sees always the current
# timber demand for establishment decisions.
# * 1 = forward looking. Model sees future demand for establishment in current step
# * 0 = myopic. Model sees current demand for establishment in current step
cfg$gms$s73_foresight <- 0                 # def = 0

# harvesting cost per ton of dry matter produced (USD/tDM)
s73_timber_prod_cost <- 2000            # def = 2000

# harvesting cost per ha of forests (USD/ha)
s73_timber_harvest_cost <- 2000         # def = 2000

# Cost multiplier for harvesting costs to make natural vegetation harvest expensive
# than timber plantation harvest. This provides a signal to the model to harvest
# timber plantations first.
s73_cost_multiplier <- 1.5              # def = 1.5

# Cost of production without using any land in case the model is running into infeasibilities.
# This is a last ditch effort for the model and the variable associated with this cost
# should not be used in a normally feasible model run (USD/tDM)
s73_free_prod_cost <- 1000000           # def = 1000000

# Switch for modifying woody biomass demand starting in 2035
# * ("default")   = Default paper demand
# * ("nopaper") = Diminishing paper demand
# * ("construction") = Higher demand for construction wood in future
cfg$gms$c73_wood_scen <- "default"             # def = "default"

# Building material demand
# * ("BAU")  = Business as usual, only 0.5% of urban dwellers need timber buildings
# * ("10pc") = 10% of urban dwellers need timber buildings
# * ("50pc") = 50% of urban dwellers need timber buildings
# * ("90pc") = 90% of urban dwellers need timber buildings

cfg$gms$c73_build_demand <- "BAU"              # def = "BAU"

# Linearized multiplier for scaling construction wood demand for easier demand
# scenario tests. The expansion factor is applied over next 80 years starting in
# 2020.
cfg$gms$s73_expansion <- 0                     # def = 0

# ***-------------------    80_optimization ------------------------------------
# * (nlp_apr17):    solve procedure solving the whole, nonlinear problem
# *                 at once
# * (lp_nlp_apr17): alternative approach in which the nonlinear terms are
# *                 fixed first so that the linear problem can be solved
# *                 before the full problem is solved
# * (nlp_par):      Parallel optimization of regions. Allows to use higher
# *                 spatial resolution but works only with exogenous trade patterns
# *                 from a run with lower resolution solved with nlp_apr17.
# *                 Usage: add "extra/highres" as output script. This will start a
# *                 second model run with higher resolution.
# *                 Make sure that the cellular input file specified in
# *                 scripts/output/extra/highres.R exists.
# *                 See scripts/output/extra/highres.R for details.

cfg$gms$optimization <- "nlp_apr17"              # def = nlp_apr17

# maximal number of solve iterations
cfg$gms$s80_maxiter <- 30

# * (conopt3):         conopt3
# * (conopt4):         conopt4
# * (conopt4+cplex):   conopt4 followed by cplex with landdiff optimization
# * (conopt4+conopt3): conopt4 followed by conopt3
cfg$gms$c80_nlp_solver <- "conopt4"              # def = conopt4

# * 1: using optfile for specified solver settings
# * 0: default settings (optfile will be ignored)
cfg$gms$s80_optfile <- 0 # def = 0


#*******************************END MODULE SETUP********************************

#### Other settings (e.g. clustering, gdx files, ...): ####

# Choosing scenario for coupling with MAGICC for emissions outside the food system
# (options) bjoernAR6_C_RemSDP-900-MagSSP1.mif, bjoernAR6_C_RemSSP1-1000-MagSDP.mif,
#           bjoernAR6_C_SDP-NPi.mif, bjoernAR6_C_SDP-PkBudg1000.mif,
#           bjoernAR6_C_SSP1-Base.mif, bjoernAR6_C_SSP1-NDC.mif,
#           bjoernAR6_C_SSP1-NPi.mif, bjoernAR6_C_SSP1-PkBudg900.mif,
#           bjoernAR6_C_SSP2-Base.mif, bjoernAR6_C_SSP2-NDC.mif,
#           bjoernAR6_C_SSP2-NPi.mif, bjoernAR6_C_SSP2-PkBudg900.mif
cfg$magicc_emis_scen <- "bjoernAR6_C_SSP2-NDC.mif"

# Decide whether the runs should be run sequentially (TRUE),
# or in parallel (FALSE)
# NA means that this decision is taken automatically
# (typically on cluster = FALSE and locally = TRUE)
cfg$sequential <- NA

# Selection of QOS to be used for submitted runs on cluster.
# Will be ignored for all other runs.
# *   options:   short  (24h max, no preemption)
# *              short_maxMem (same as short but with 16 CPUs and max Memory)
# *              medium (1 week max, no preemption)
# *              priority (immediate start, but slots limited to 5 in parallel)
# *              priority_maxMem (same as priority but with 16 CPUs and max Memory)
# *              standby (1 week max, preemption possible)
# *              standby_dayMax (24h max, preemption possible)
# *              standby_maxMem_dayMax (same as standby_dayMax but with 16 CPUs and max Memory)
# *              standby_maxMem (same as standby but with 16 CPUs and max Memory)
# *              NULL (educated guess of best option based
# *                    available resources)
cfg$qos <- NULL               # def = NULL

# How should log information be treated?
# (0:no output, 2:write to full.log 3:show in console)
cfg$logoption <- 2

# Should output.R generate output?
# List of output scripts that should be used
# Available scripts can be found in scripts/output/
cfg$output <- c("output_check", "extra/disaggregation", "rds_report")

# Set the format for the results folder
# :date: is a placeholder for the current time stamp (e.g. "results:date:")
# :title: is a placeholder for the current run title (cfg$title)
cfg$results_folder <- "output/:title::date:"

# Results folder used by the "highres.R" output script
# If NULL, the default set in "highres.R" is used (currently a subfolder in "output")
# To place highres runs directly in the "output" folder, change to "output"
# To place highres runs in a specific subfolder change to "output/HR"
cfg$results_folder_highres <- NULL

# Which files should be copied into the output folder?
cfg$files2export <- list()
# Files that should be copied before MAgPIE is started
cfg$files2export$start <- c("input/info.txt",
                            "input/avl_land_full_t_0.5.mz",
                            "input/luh2_side_layers_0.5.mz",
                            "modules/14_yields/input/lpj_yields_0.5.mz",
                            "modules/22_land_conservation/input/wdpa_baseline_0.5.mz",
                            "modules/22_land_conservation/input/consv_prio_areas_0.5.mz",
                            "modules/30_crop/endo_apr21/input/avl_cropland_0.5.mz",
                            "modules/50_nr_soil_budget/input/f50_NitrogenFixationRateNatural_0.5.mz",
                            "modules/50_nr_soil_budget/input/f50_AtmosphericDepositionRates_0.5.mz",
                            "input/f34_urbanland_0.5.mz",
                            "input/spatial_header.rda",
                            "scripts/run_submit/submit.R",
                            "scripts/run_submit/submit_*.sh",
                            ".Rprofile",
                            "input/clustermap*.rds",
                            "input/lpj_envflow_total_*.mz",
                            "input/lpj_watavail_total_*.mz",
                            "input/validation.mif",
                            "calib_*.cs3",
                            "land_conversion_cost_calib_*.cs3",
                            "input/spamplot_*.pdf",
                            "input/regionmapping*.csv",
                            "input/kba_land_0.5.mz",
                            "input/f58_peatland_area_0.5.mz",
                            "input/MAPSPAM_croparea_0.5.mz",
                            "input/LUH2_croparea_0.5.mz")

# Files that should be copied after the MAgPIE run is finished
cfg$files2export$end <- NULL

# Expert use only, should not be set manually. Path to a renv.lock file
# defining the package environment for newly started runs.
cfg$renv_lock <- NULL

# Folder run statistics should be submitted to
cfg$runstatistics <- "/p/projects/rd3mod/models/statistics/magpie"

# name of the overall model (just used for reporting purposes)
# should usually not be changed
cfg$model_name <- "MAgPIE"

# a list of additional information characterizing this run. Can be used
# to save relevant information about the run and can, in contrast to all other
# setting, contain list elements which do not exist in the reference
# configuration
cfg$info <- list()

# Should the restart files of each iteration be kept in the output folder (TRUE)
# or deleted after the run finished (FALSE)
cfg$keep_restarts <- FALSE

# Should the model run in developer mode? This will loosen some restrictions,
# such as temporary toleration of coding etiquette violations
# Please make sure to set it to FALSE for production runs!
cfg$developer_mode <- FALSE

# Should the model run in debug mode?
# Download script will copy files from input to destination folder instead of
# moving it allowing to check whether something in the move/copy process goes
# wrong
cfg$debug <- FALSE

################################################################################
